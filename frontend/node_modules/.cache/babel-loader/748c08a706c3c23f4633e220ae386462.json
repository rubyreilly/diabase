{"ast":null,"code":"//action creators here\n//------------------user action creators--------------------//\nexport var setUser = function setUser(user) {\n  return {\n    type: 'SET_USER',\n    payload: user\n  };\n};\n\nvar getUsers = function getUsers(users) {\n  return {\n    type: 'GET_USERS',\n    payload: users\n  };\n};\n\nvar addUser = function addUser(user) {\n  return {\n    type: 'ADD_USER',\n    payload: user\n  };\n}; //------------------insulin action creators--------------------//\n\n\nvar getInsulins = function getInsulins(insulins) {\n  return {\n    type: 'GET_INSULINS',\n    payload: insulins\n  };\n};\n\nexport var selectInsulin = function selectInsulin(insulin) {\n  return {\n    type: 'SELECT_INSULIN',\n    payload: insulin\n  };\n};\n\nvar addInsulin = function addInsulin(insulin) {\n  return {\n    type: 'ADD_INSULIN',\n    payload: insulin\n  };\n};\n\nexport var removeInsulin = function removeInsulin(insulin) {\n  return {\n    type: 'REMOVE_INSULIN',\n    payload: insulin\n  };\n}; //------------------entry action creators--------------------//\n\nvar addEntry = function addEntry(entry) {\n  return {\n    type: 'ADD_ENTRY',\n    payload: entry\n  };\n};\n\nexport var removeEntry = function removeEntry(entry) {\n  return {\n    type: 'REMOVE_ENTRY',\n    payload: entry\n  };\n}; //thunk creators here\n//------------------insulin thunk creators--------------------//\n\nexport var fetchInsulins = function fetchInsulins(user) {\n  return function (dispatch) {\n    return fetch(\"http://localhost:3001/api/v1/users/\".concat(user, \"/insulins\")).then(function (res) {\n      return res.json();\n    }).then(function (res) {\n      return dispatch(getInsulins(res));\n    }).catch(console.error);\n  };\n};\nexport var postInsulin = function postInsulin(newInsulin) {\n  return function (dispatch) {\n    var options = {\n      method: \"POST\",\n      body: JSON.stringify(newInsulin),\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    };\n    return fetch(\"http://localhost:3001/api/v1/users/\".concat(newInsulin.user_id, \"/insulins\"), options).then(function (res) {\n      return res.json();\n    }).then(function (res) {\n      return dispatch(addInsulin(res));\n    }).catch(console.error);\n  };\n};\nexport var deleteInsulin = function deleteInsulin(insulinObj) {\n  return function (dispatch) {\n    var options = {\n      method: \"DELETE\"\n    };\n    return fetch(\"http://localhost:3001/api/v1/users/\".concat(insulinObj.user_id, \"/insulins/\").concat(insulinObj.id), options);\n  };\n}; //---------------entry thunk creators-----------------//\n\nexport var postEntry = function postEntry(newEntry) {\n  return function (dispatch) {\n    var options = {\n      method: \"POST\",\n      body: JSON.stringify(newEntry),\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    };\n    return fetch(\"http://localhost:3001/api/v1/users/\".concat(newEntry.user_id, \"/entries\"), options).then(function (res) {\n      return res.json();\n    }).then(function (res) {\n      return dispatch(addEntry(res));\n    }).catch(console.error);\n  };\n};\nexport var deleteEntry = function deleteEntry(entryObj) {\n  return function (dispatch) {\n    var options = {\n      method: \"DELETE\"\n    };\n    return fetch(\"http://localhost:3001/api/v1/users/\".concat(entryObj.user_id, \"/entries/\").concat(entryObj.id), options);\n  };\n}; //-----------------user thunk creators-----------------------------//\n// export const fetchUsers = ()=>{\n//   return (dispatch)=>{\n//     return fetch(`http://localhost:3001/api/v1/users`)\n//     .then(res=>res.json())\n//     .then((res)=>dispatch(getUsers(res)))\n//     .catch(console.error)\n//   }\n// }\n\nexport var fetchUser = function fetchUser(username) {\n  return function (dispatch) {\n    return fetch(\"http://localhost:3001/api/v1/login/\".concat(username)).then(function (res) {\n      return res.json();\n    }).then(function (res) {\n      return console.log(res);\n    }); // .then((res)=>dispatch(setUser(res)))\n    // .catch(console.error)\n  };\n};\nexport var postNewUser = function postNewUser(newUser) {\n  return function (dispatch) {\n    var options = {\n      method: \"POST\",\n      body: JSON.stringify(newUser),\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    };\n    return fetch(\"http://localhost:3001/api/v1/users\", options).then(function (res) {\n      return res.json();\n    }).then(function (res) {\n      return dispatch(addUser(res));\n    }) // .catch(console.error)\n    .then(function (action) {\n      return dispatch(setUser(action.payload.user));\n    }).then(function (action) {\n      return dispatch(fetchInsulins(action.payload.id));\n    });\n  };\n}; // export const fetchCurrentUser = (token)=>{\n//   return (dispatch)=>{\n//     const options = {\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         Accept: \"application/json\",\n//         Authorization: token\n//       }}\n//       return fetch(`http://localhost:3001/api/v1/current_user`, options)\n//       .then(res => res.json())\n//       // .then(res=>console.log(res))\n//       .then((user)=>dispatch(setUser(user)))\n//       .catch(console.error)\n//\n//   }\n// }","map":{"version":3,"sources":["/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/src/Redux/actions.js"],"names":["setUser","user","type","payload","getUsers","users","addUser","getInsulins","insulins","selectInsulin","insulin","addInsulin","removeInsulin","addEntry","entry","removeEntry","fetchInsulins","dispatch","fetch","then","res","json","catch","console","error","postInsulin","newInsulin","options","method","body","JSON","stringify","headers","user_id","deleteInsulin","insulinObj","id","postEntry","newEntry","deleteEntry","entryObj","fetchUser","username","log","postNewUser","newUser","action"],"mappings":"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","sourcesContent":["//action creators here\n\n//------------------user action creators--------------------//\n\nexport const setUser = (user)=>({type:'SET_USER', payload:user})\n\nconst getUsers = (users)=>({type:'GET_USERS', payload:users})\n\nconst addUser = (user)=>({type:'ADD_USER', payload:user})\n\n//------------------insulin action creators--------------------//\n\nconst getInsulins = (insulins)=>({type:'GET_INSULINS', payload:insulins})\n\nexport const selectInsulin = (insulin)=>({type:'SELECT_INSULIN', payload:insulin})\n\nconst addInsulin = (insulin)=>({type:'ADD_INSULIN', payload:insulin})\n\nexport const removeInsulin = (insulin)=>({type:'REMOVE_INSULIN', payload:insulin})\n\n\n//------------------entry action creators--------------------//\n\nconst addEntry = (entry)=>({type:'ADD_ENTRY', payload:entry})\n\nexport const removeEntry = (entry)=>({type:'REMOVE_ENTRY', payload:entry})\n\n//thunk creators here\n\n//------------------insulin thunk creators--------------------//\n\nexport const fetchInsulins = (user)=>{\n  return (dispatch)=>{\n    return fetch(`http://localhost:3001/api/v1/users/${user}/insulins`)\n    .then(res=>res.json())\n    .then((res)=>dispatch(getInsulins(res)))\n    .catch(console.error)\n  }\n}\n\n\n\nexport const postInsulin= (newInsulin)=>{\n  return (dispatch)=>{\n    const options = {\n      method: \"POST\",\n      body: JSON.stringify(newInsulin),\n      headers:{\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    }\n    return fetch(`http://localhost:3001/api/v1/users/${newInsulin.user_id}/insulins`, options)\n    .then(res=>res.json())\n    .then((res) => dispatch(addInsulin(res)))\n    .catch(console.error)\n  }\n}\n\n\n\nexport const deleteInsulin= (insulinObj)=>{\n  return (dispatch)=>{\n    const options = {\n      method: \"DELETE\",\n    }\n    return fetch(`http://localhost:3001/api/v1/users/${insulinObj.user_id}/insulins/${insulinObj.id}`, options)\n  }\n}\n\n\n//---------------entry thunk creators-----------------//\n\nexport const postEntry= (newEntry)=>{\n  return (dispatch)=>{\n    const options = {\n      method: \"POST\",\n      body: JSON.stringify(newEntry),\n      headers:{\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    }\n    return fetch(`http://localhost:3001/api/v1/users/${newEntry.user_id}/entries`, options)\n    .then(res=>res.json())\n    .then((res) => dispatch(addEntry(res)))\n    .catch(console.error)\n  }\n}\n\n\nexport const deleteEntry= (entryObj)=>{\n  return (dispatch)=>{\n    const options = {\n      method: \"DELETE\",\n    }\n    return fetch(`http://localhost:3001/api/v1/users/${entryObj.user_id}/entries/${entryObj.id}`, options)\n  }\n}\n\n\n\n\n//-----------------user thunk creators-----------------------------//\n\n// export const fetchUsers = ()=>{\n//   return (dispatch)=>{\n//     return fetch(`http://localhost:3001/api/v1/users`)\n//     .then(res=>res.json())\n//     .then((res)=>dispatch(getUsers(res)))\n//     .catch(console.error)\n//   }\n// }\n\nexport const fetchUser = (username)=>{\n  return (dispatch)=>{\n    return fetch(`http://localhost:3001/api/v1/login/${username}`)\n    .then(res=>res.json())\n    .then(res=>console.log(res))\n    // .then((res)=>dispatch(setUser(res)))\n    // .catch(console.error)\n  }\n}\n\n\nexport const postNewUser = (newUser)=>{\n  return (dispatch)=>{\n    const options = {\n      method: \"POST\",\n      body: JSON.stringify(newUser),\n      headers:{\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    }\n    return fetch(`http://localhost:3001/api/v1/users`, options)\n    .then(res=>res.json())\n    .then((res) => dispatch(addUser(res)))\n    // .catch(console.error)\n    .then(action=>dispatch(setUser(action.payload.user)))\n    .then(action=>dispatch(fetchInsulins(action.payload.id)))\n  }\n}\n\n\n\n// export const fetchCurrentUser = (token)=>{\n//   return (dispatch)=>{\n//     const options = {\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         Accept: \"application/json\",\n//         Authorization: token\n//       }}\n//       return fetch(`http://localhost:3001/api/v1/current_user`, options)\n//       .then(res => res.json())\n//       // .then(res=>console.log(res))\n//       .then((user)=>dispatch(setUser(user)))\n//       .catch(console.error)\n//\n//   }\n// }\n"]},"metadata":{},"sourceType":"module"}