{"ast":null,"code":"import _classCallCheck from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport HomeContainer from './Components/HomeContainer'; // import NavBar from './Components/NavBar'\n// import Header from './Components/Header'\n// import TimerContainer from './Components/TimerContainer'\n\nimport LoginForm from './Components/LoginForm';\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\nimport 'semantic-ui-css/semantic.min.css';\nimport { connect } from 'react-redux';\nimport { fetchInsulins as _fetchInsulins, fetchUsers as _fetchUsers } from './Redux/actions';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.componentDidMount = function () {\n      _this.props.fetchInsulins(_this.props.user);\n\n      _this.props.fetchUsers();\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/login\",\n        component: LoginForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/\",\n        component: HomeContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchInsulins: function fetchInsulins(user) {\n      return dispatch(_fetchInsulins(user));\n    },\n    fetchUsers: function fetchUsers() {\n      return dispatch(_fetchUsers());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/src/App.js"],"names":["React","Component","HomeContainer","LoginForm","BrowserRouter","Router","Route","Switch","Link","connect","fetchInsulins","fetchUsers","App","componentDidMount","props","user","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,4BAA1B,C,CACA;AACA;AACA;;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,EAAiDC,IAAjD,QAA6D,kBAA7D;AAEA,OAAO,kCAAP;AAEA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,aAAa,IAAbA,cAAR,EAAuBC,UAAU,IAAVA,WAAvB,QAAwC,iBAAxC;AAIA,OAAO,WAAP;;IAEMC,G;;;;;;;;;;;;;;;;;;UAEJC,iB,GAAkB,YAAI;AACpB,YAAKC,KAAL,CAAWJ,aAAX,CAAyB,MAAKI,KAAL,CAAWC,IAApC;;AACA,YAAKD,KAAL,CAAWH,UAAX;AACD,K;;;;;;;6BAEQ;AACP,aACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,SAAS,EAAER,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,SAAS,EAAED,aAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAFF,CADF;AAWD;;;;EAnBeD,S;;AAsBlB,IAAMe,eAAe,GAAC,SAAhBA,eAAgB,CAACC,KAAD,EAAS;AAC7B,SAAM;AAACF,IAAAA,IAAI,EAACE,KAAK,CAACF;AAAZ,GAAN;AACD,CAFD;;AAIA,IAAMG,kBAAkB,GAAC,SAAnBA,kBAAmB,CAACC,QAAD,EAAY;AACnC,SAAM;AACJT,IAAAA,aAAa,EAAC,uBAACK,IAAD;AAAA,aAAQI,QAAQ,CAACT,cAAa,CAACK,IAAD,CAAd,CAAhB;AAAA,KADV;AAEJJ,IAAAA,UAAU,EAAC;AAAA,aAAIQ,QAAQ,CAACR,WAAU,EAAX,CAAZ;AAAA;AAFP,GAAN;AAID,CALD;;AAQA,eAAeF,OAAO,CAACO,eAAD,EAAiBE,kBAAjB,CAAP,CAA4CN,GAA5C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport HomeContainer from './Components/HomeContainer'\n// import NavBar from './Components/NavBar'\n// import Header from './Components/Header'\n// import TimerContainer from './Components/TimerContainer'\nimport LoginForm from './Components/LoginForm'\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\n\nimport 'semantic-ui-css/semantic.min.css';\n\nimport {connect} from 'react-redux'\nimport {fetchInsulins, fetchUsers} from './Redux/actions'\n\n\n\nimport './App.css';\n\nclass App extends Component {\n\n  componentDidMount=()=>{\n    this.props.fetchInsulins(this.props.user)\n    this.props.fetchUsers()\n  }\n\n  render() {\n    return (\n      <Router>\n\n        <Switch>\n          <Route path=\"/login\" component={LoginForm} />\n          <Route path=\"/\" component={HomeContainer} />\n        </Switch>\n\n\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps=(state)=>{\n  return{user:state.user}\n}\n\nconst mapDispatchToProps=(dispatch)=>{\n  return{\n    fetchInsulins:(user)=>dispatch(fetchInsulins(user)),\n    fetchUsers:()=>dispatch(fetchUsers())\n  }\n}\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}