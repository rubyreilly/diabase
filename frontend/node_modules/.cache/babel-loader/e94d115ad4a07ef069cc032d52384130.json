{"ast":null,"code":"//action creators here\nvar setUser = function setUser(user) {\n  return {\n    type: 'SET_USER',\n    payload: user\n  };\n};\n\nvar getInsulins = function getInsulins(insulins) {\n  return {\n    type: 'GET_INSULINS',\n    payload: insulins\n  };\n};\n\nexport var selectInsulin = function selectInsulin(insulin) {\n  return {\n    type: 'SELECT_INSULIN',\n    payload: insulin\n  };\n};\n\nvar addInsulin = function addInsulin(insulin) {\n  return {\n    type: 'ADD_INSULIN',\n    payload: insulin\n  };\n};\n\nexport var removeInsulin = function removeInsulin(insulin) {\n  return {\n    type: 'REMOVE_INSULIN',\n    payload: insulin\n  };\n};\n\nvar addEntry = function addEntry(entry) {\n  return {\n    type: 'ADD_ENTRY',\n    payload: entry\n  };\n};\n\nexport var removeEntry = function removeEntry(entry) {\n  return {\n    type: 'REMOVE_ENTRY',\n    payload: entry\n  };\n}; //thunk creators here\n//--------------INSULINS------------//\n\nexport var postInsulin = function postInsulin(newInsulin) {\n  return function (dispatch) {\n    var options = {\n      method: \"POST\",\n      body: JSON.stringify(newInsulin),\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    };\n    return fetch(\"http://localhost:3001/api/v1/users/\".concat(newInsulin.user_id, \"/insulins\"), options).then(function (res) {\n      return res.json();\n    }).then(function (res) {\n      return dispatch(addInsulin(res));\n    }).catch(console.error);\n  };\n};\nexport var deleteInsulin = function deleteInsulin(insulinObj) {\n  return function (dispatch) {\n    var options = {\n      method: \"DELETE\"\n    };\n    return fetch(\"http://localhost:3001/api/v1/users/\".concat(insulinObj.user_id, \"/insulins/\").concat(insulinObj.id), options);\n  };\n}; //---------------ENTRY-----------------//\n\nexport var postEntry = function postEntry(newEntry) {\n  return function (dispatch) {\n    var options = {\n      method: \"POST\",\n      body: JSON.stringify(newEntry),\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    };\n    return fetch(\"http://localhost:3001/api/v1/users/\".concat(newEntry.user_id, \"/entries\"), options).then(function (res) {\n      return res.json();\n    }).then(function (res) {\n      return dispatch(addEntry(res));\n    }).catch(console.error);\n  };\n};\nexport var deleteEntry = function deleteEntry(entryObj) {\n  return function (dispatch) {\n    var options = {\n      method: \"DELETE\"\n    };\n    return fetch(\"http://localhost:3001/api/v1/users/\".concat(entryObj.user_id, \"/entries/\").concat(entryObj.id), options);\n  };\n};\nexport var fetchInsulins = function fetchInsulins(user) {\n  return function (dispatch) {\n    return fetch(\"http://localhost:3001/api/v1/users/\".concat(user, \"/insulins\")).then(function (res) {\n      return res.json();\n    }).then(function (res) {\n      return dispatch(getInsulins(res));\n    }).catch(console.error);\n  };\n}; //-----------------USER & AUTH-----------------------------//\n\nexport var fetchCurrentUser = function fetchCurrentUser(token) {\n  return function (dispatch) {\n    var options = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: token\n      }\n    };\n    return fetch(\"http://localhost:3001/api/v1/current_user\", options).then(function (res) {\n      return res.json();\n    }) // .then(res=>console.log(res))\n    .then(function (user) {\n      return dispatch(setUser(user));\n    }).catch(console.error);\n  };\n};","map":{"version":3,"sources":["/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/src/Redux/actions.js"],"names":["setUser","user","type","payload","getInsulins","insulins","selectInsulin","insulin","addInsulin","removeInsulin","addEntry","entry","removeEntry","postInsulin","newInsulin","dispatch","options","method","body","JSON","stringify","headers","fetch","user_id","then","res","json","catch","console","error","deleteInsulin","insulinObj","id","postEntry","newEntry","deleteEntry","entryObj","fetchInsulins","fetchCurrentUser","token","Accept","Authorization"],"mappings":"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","sourcesContent":["//action creators here\n\nconst setUser = (user)=>({type:'SET_USER', payload:user})\n\n\nconst getInsulins = (insulins)=>({type:'GET_INSULINS', payload:insulins})\n\nexport const selectInsulin = (insulin)=>({type:'SELECT_INSULIN', payload:insulin})\n\nconst addInsulin = (insulin)=>({type:'ADD_INSULIN', payload:insulin})\n\nexport const removeInsulin = (insulin)=>({type:'REMOVE_INSULIN', payload:insulin})\n\nconst addEntry = (entry)=>({type:'ADD_ENTRY', payload:entry})\n\nexport const removeEntry = (entry)=>({type:'REMOVE_ENTRY', payload:entry})\n\n//thunk creators here\n\n//--------------INSULINS------------//\nexport const postInsulin= (newInsulin)=>{\n  return (dispatch)=>{\n    const options = {\n      method: \"POST\",\n      body: JSON.stringify(newInsulin),\n      headers:{\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    }\n    return fetch(`http://localhost:3001/api/v1/users/${newInsulin.user_id}/insulins`, options)\n    .then(res=>res.json())\n    .then((res) => dispatch(addInsulin(res)))\n    .catch(console.error)\n  }\n}\n\nexport const deleteInsulin= (insulinObj)=>{\n  return (dispatch)=>{\n    const options = {\n      method: \"DELETE\",\n    }\n    return fetch(`http://localhost:3001/api/v1/users/${insulinObj.user_id}/insulins/${insulinObj.id}`, options)\n  }\n}\n\n\n//---------------ENTRY-----------------//\n\nexport const postEntry= (newEntry)=>{\n  return (dispatch)=>{\n    const options = {\n      method: \"POST\",\n      body: JSON.stringify(newEntry),\n      headers:{\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    }\n    return fetch(`http://localhost:3001/api/v1/users/${newEntry.user_id}/entries`, options)\n    .then(res=>res.json())\n    .then((res) => dispatch(addEntry(res)))\n    .catch(console.error)\n  }\n}\n\n\nexport const deleteEntry= (entryObj)=>{\n  return (dispatch)=>{\n    const options = {\n      method: \"DELETE\",\n    }\n    return fetch(`http://localhost:3001/api/v1/users/${entryObj.user_id}/entries/${entryObj.id}`, options)\n  }\n}\n\n\nexport const fetchInsulins = (user)=>{\n  return (dispatch)=>{\n    return fetch(`http://localhost:3001/api/v1/users/${user}/insulins`)\n    .then(res=>res.json())\n    .then((res)=>dispatch(getInsulins(res)))\n    .catch(console.error)\n  }\n}\n\n//-----------------USER & AUTH-----------------------------//\n\nexport const fetchCurrentUser = (token)=>{\n  return (dispatch)=>{\n    const options = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: token\n      }}\n      return fetch(`http://localhost:3001/api/v1/current_user`, options)\n      .then(res => res.json())\n      // .then(res=>console.log(res))\n      .then((user)=>dispatch(setUser(user)))\n      .catch(console.error)\n\n  }\n}\n"]},"metadata":{},"sourceType":"module"}