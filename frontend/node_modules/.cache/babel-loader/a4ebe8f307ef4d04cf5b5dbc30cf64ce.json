{"ast":null,"code":"import _classCallCheck from \"/Users/rubyreilly/dev/code/diabase/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rubyreilly/dev/code/diabase/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rubyreilly/dev/code/diabase/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rubyreilly/dev/code/diabase/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rubyreilly/dev/code/diabase/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rubyreilly/dev/code/diabase/frontend/src/Components/LogEntry.js\";\nimport React, { Component } from 'react';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport { deleteEntry as _deleteEntry, removeEntry as _removeEntry, updateEntry as _updateEntry } from '../Redux/actions';\nimport Countdown from 'react-countdown-now';\n\nvar LogEntry =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LogEntry, _Component);\n\n  function LogEntry() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LogEntry);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LogEntry)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      selected: false\n    };\n\n    _this.calculateTimeLeft = function () {\n      var start = _this.props.entryObj.entry_date_and_time;\n      var duration_min = _this.props.insulinObj.insulin_duration_in_minutes;\n      var duration_sec = duration_min * 60;\n      var duration = duration_sec * 1000;\n      return React.createElement(Countdown, {\n        date: new Date(start).getTime() + duration,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      });\n    };\n\n    _this.calculateEndTime = function (start) {\n      var duration = _this.props.insulinObj.insulin_duration_in_minutes;\n      return moment(start).add(duration, 'minutes').format();\n    };\n\n    _this.handleDelete = function (e) {\n      _this.props.removeEntry(_this.props.entryObj);\n\n      _this.props.deleteEntry(_this.props.entryObj);\n    };\n\n    _this.handleUpdate = function (e) {\n      //form to edit\n      _this.setState({\n        selected: true\n      });\n\n      _this.props.updateEntry(_this.props.entryObj);\n    };\n\n    return _this;\n  }\n\n  _createClass(LogEntry, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var entryObj = this.props.entryObj;\n      var formattedDate = moment(entryObj.entry_date_and_time).format('dddd MMMM Do');\n      var formattedStartTime = moment(entryObj.entry_date_and_time).format('LT');\n      var formattedEndTime = moment(this.calculateEndTime(entryObj.entry_date_and_time)).calendar();\n      var timeLeft = this.calculateTimeLeft();\n      var editText = \"can edit\";\n      var noEditText = \"no\";\n      return React.createElement(\"tr\", {\n        id: entryObj.status === \"active\" ? \"entry\" : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        \"data-label\": \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, this.state.selected ? editText : formattedDate), React.createElement(\"td\", {\n        \"data-label\": \"start-time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, this.state.selected ? editText : formattedStartTime), React.createElement(\"td\", {\n        \"data-label\": \"end_time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, this.state.selected ? noEditText : entryObj.status === \"active\" ? formattedEndTime : \"-\"), React.createElement(\"td\", {\n        \"data-label\": \"time_left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, this.state.selected ? noEditText : entryObj.status === \"complete\" ? \"-\" : timeLeft), React.createElement(\"td\", {\n        \"data-label\": \"bloodSugar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, this.state.selected ? editText : entryObj.current_blood_sugar !== null ? entryObj.current_blood_sugar : \"-\"), React.createElement(\"td\", {\n        \"data-label\": \"numUnits\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, this.state.selected ? editText : entryObj.num_units_insulin !== null ? entryObj.num_units_insulin : \"-\"), React.createElement(\"td\", {\n        \"data-label\": \"note\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, this.state.selected ? editText : entryObj.note === \"\" || entryObj.note === null ? \"-\" : entryObj.note), React.createElement(\"td\", {\n        \"data-label\": \"status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, this.state.selected ? noEditText : entryObj.status), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick(e) {\n          return _this2.handleUpdate(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"edit\"), React.createElement(\"button\", {\n        onClick: function onClick(e) {\n          return _this2.handleDelete(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"delete\")));\n    }\n  }]);\n\n  return LogEntry;\n}(Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    deleteEntry: function deleteEntry(entryObj) {\n      return dispatch(_deleteEntry(entryObj));\n    },\n    removeEntry: function removeEntry(entryObj) {\n      return dispatch(_removeEntry(entryObj));\n    },\n    updateEntry: function updateEntry(entryObj) {\n      return dispatch(_updateEntry(entryObj));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(LogEntry);","map":{"version":3,"sources":["/Users/rubyreilly/dev/code/diabase/frontend/src/Components/LogEntry.js"],"names":["React","Component","moment","connect","deleteEntry","removeEntry","updateEntry","Countdown","LogEntry","state","selected","calculateTimeLeft","start","props","entryObj","entry_date_and_time","duration_min","insulinObj","insulin_duration_in_minutes","duration_sec","duration","Date","getTime","calculateEndTime","add","format","handleDelete","e","handleUpdate","setState","formattedDate","formattedStartTime","formattedEndTime","calendar","timeLeft","editText","noEditText","status","current_blood_sugar","num_units_insulin","note","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport moment from 'moment'\nimport {connect} from 'react-redux'\nimport {deleteEntry, removeEntry, updateEntry} from '../Redux/actions'\nimport Countdown from 'react-countdown-now';\n\n\n\n\nclass LogEntry extends Component{\n\n  state = {\n    selected: false\n  }\n\n  calculateTimeLeft=()=>{\n    const start = this.props.entryObj.entry_date_and_time\n\n    const duration_min = this.props.insulinObj.insulin_duration_in_minutes\n    const duration_sec = duration_min * 60\n    const duration = duration_sec * 1000\n\n    return(<Countdown date={new Date(start).getTime() + duration} />)\n  }\n\n\n  calculateEndTime=(start)=>{\n    const duration = this.props.insulinObj.insulin_duration_in_minutes\n    return moment(start).add(duration, 'minutes').format()\n  }\n\n  handleDelete=(e)=>{\n    this.props.removeEntry(this.props.entryObj)\n    this.props.deleteEntry(this.props.entryObj)\n  }\n\n  handleUpdate=(e)=>{\n    //form to edit\n    this.setState({selected:true})\n    this.props.updateEntry(this.props.entryObj)\n  }\n\n\n\n\n  render(){\n    const {entryObj}=this.props\n    const formattedDate = moment(entryObj.entry_date_and_time).format('dddd MMMM Do')\n    const formattedStartTime = moment(entryObj.entry_date_and_time).format('LT')\n    const formattedEndTime = moment(this.calculateEndTime(entryObj.entry_date_and_time)).calendar()\n    const timeLeft = this.calculateTimeLeft()\n    const editText = \"can edit\"\n    const noEditText = \"no\"\n    return(\n\n      <tr id={entryObj.status === \"active\" ? \"entry\" : null}>\n      <td data-label=\"date\">{this.state.selected? editText : formattedDate}</td>\n      <td data-label=\"start-time\">{this.state.selected? editText : formattedStartTime}</td>\n\n\n      <td data-label=\"end_time\">{this.state.selected? noEditText : entryObj.status === \"active\" ? formattedEndTime : \"-\"}</td>\n      <td data-label=\"time_left\">{this.state.selected? noEditText : entryObj.status === \"complete\" ? \"-\":timeLeft}</td>\n\n      <td data-label=\"bloodSugar\">{this.state.selected? editText : entryObj.current_blood_sugar !== null ? entryObj.current_blood_sugar : \"-\"}</td>\n      <td data-label=\"numUnits\">{this.state.selected? editText : entryObj.num_units_insulin !== null ? entryObj.num_units_insulin : \"-\"}</td>\n\n      <td data-label=\"note\">{this.state.selected? editText : entryObj.note === \"\" || entryObj.note === null ? \"-\":entryObj.note}</td>\n\n\n      <td data-label=\"status\">{this.state.selected? noEditText : entryObj.status}</td>\n      <td>\n      <button onClick={(e)=>this.handleUpdate(e)}>edit</button>\n      <button onClick={(e)=>this.handleDelete(e)}>delete</button></td>\n      </tr>\n\n    )\n  }\n}\n\nconst mapDispatchToProps=(dispatch)=>{\n  return{\n    deleteEntry:(entryObj)=>dispatch(deleteEntry(entryObj)),\n    removeEntry:(entryObj)=>dispatch(removeEntry(entryObj)),\n    updateEntry:(entryObj)=>dispatch(updateEntry(entryObj))\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(LogEntry)\n"]},"metadata":{},"sourceType":"module"}