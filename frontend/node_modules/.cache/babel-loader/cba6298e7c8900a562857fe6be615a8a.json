{"ast":null,"code":"//action creators here\n//------------------user action creators--------------------//\nvar setUser = function setUser(user) {\n  return {\n    type: 'SET_USER',\n    payload: user\n  };\n};\n\nvar editUser = function editUser(user) {\n  return {\n    type: 'EDIT_USER',\n    payload: user\n  };\n}; // const addUser = (user)=>({type:'ADD_USER', payload:user})\n//------------------insulin action creators--------------------//\n// const getInsulins = (insulins)=>({type:'GET_INSULINS', payload:insulins})\n\n\nexport var selectInsulin = function selectInsulin(insulin) {\n  return {\n    type: 'SELECT_INSULIN',\n    payload: insulin\n  };\n};\n\nvar addInsulin = function addInsulin(insulin) {\n  return {\n    type: 'ADD_INSULIN',\n    payload: insulin\n  };\n};\n\nexport var removeInsulin = function removeInsulin(insulin) {\n  return {\n    type: 'REMOVE_INSULIN',\n    payload: insulin\n  };\n}; //------------------entry action creators--------------------//\n\nvar addEntry = function addEntry(entry) {\n  return {\n    type: 'ADD_ENTRY',\n    payload: entry\n  };\n};\n\nexport var removeEntry = function removeEntry(entry) {\n  return {\n    type: 'REMOVE_ENTRY',\n    payload: entry\n  };\n}; //thunk creators here\n//------------------insulin thunk creators--------------------//\n// export const fetchInsulins = (user)=>{\n//   return (dispatch)=>{\n//     return fetch(`http://localhost:3001/api/v1/users/${user}/insulins`)\n//     .then(res=>res.json())\n//     .then((res)=>dispatch(getInsulins(res)))\n//     .catch(console.error)\n//   }\n// }\n\nexport var postInsulin = function postInsulin(newInsulin) {\n  return function (dispatch) {\n    var options = {\n      method: \"POST\",\n      body: JSON.stringify(newInsulin),\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    };\n    return fetch(\"http://localhost:3001/api/v1/users/\".concat(newInsulin.user_id, \"/insulins\"), options).then(function (res) {\n      return res.json();\n    }).then(function (res) {\n      return dispatch(addInsulin(res));\n    }).catch(console.error);\n  };\n};\nexport var deleteInsulin = function deleteInsulin(insulinObj) {\n  return function (dispatch) {\n    var options = {\n      method: \"DELETE\"\n    };\n    return fetch(\"http://localhost:3001/api/v1/users/\".concat(insulinObj.user_id, \"/insulins/\").concat(insulinObj.id), options);\n  };\n}; //---------------entry thunk creators-----------------//\n\nexport var postEntry = function postEntry(newEntry) {\n  return function (dispatch) {\n    var options = {\n      method: \"POST\",\n      body: JSON.stringify(newEntry),\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    };\n    return fetch(\"http://localhost:3001/api/v1/users/\".concat(newEntry.user_id, \"/entries\"), options).then(function (res) {\n      return res.json();\n    }).then(function (res) {\n      return dispatch(addEntry(res));\n    }).catch(console.error);\n  };\n};\nexport var deleteEntry = function deleteEntry(entryObj) {\n  return function (dispatch) {\n    var options = {\n      method: \"DELETE\"\n    };\n    return fetch(\"http://localhost:3001/api/v1/users/\".concat(entryObj.user_id, \"/entries/\").concat(entryObj.id), options);\n  };\n}; //-----------------user thunk creators-----------------------------//\n\nexport var fetchUser = function fetchUser(name) {\n  return function (dispatch) {\n    var options = {\n      method: \"POST\",\n      body: JSON.stringify({\n        user: {\n          username: name\n        }\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    };\n    return fetch(\"http://localhost:3001/api/v1/login\", options).then(function (res) {\n      return res.json();\n    }) // .then(res=>console.log(res.user))\n    .then(function (res) {\n      return dispatch(setUser(res.user));\n    }).catch(console.error);\n  };\n};\nexport var updateUser = function updateUser(userData) {\n  console.log(\"USERDATA IN PATCH\", userData);\n  return function (dispatch) {\n    var options = {\n      method: \"PATCH\",\n      body: JSON.stringify({\n        user: userData\n      }),\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    };\n    return fetch(\"http://localhost:3001/api/v1/users/\".concat(userData.id), options).then(function (res) {\n      return res.json();\n    }).then(function (res) {\n      return dispatch(editUser(res));\n    }).catch(console.error);\n  };\n}; // export const postNewUser = (name)=>{\n//   return (dispatch)=>{\n//     const options = {\n//       method: \"POST\",\n//       body: JSON.stringify({user:{username:name}}),\n//       headers:{\n//         'Content-Type': 'application/json',\n//         'Accept': 'application/json'\n//       }\n//     }\n//     return fetch(`http://localhost:3001/api/v1/users`, options)\n//     .then(res=>res.json())\n//     .then((res) => dispatch(addUser(res)))\n//     .catch(console.error)\n// }\n// }","map":{"version":3,"sources":["/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/src/Redux/actions.js"],"names":["setUser","user","type","payload","editUser","selectInsulin","insulin","addInsulin","removeInsulin","addEntry","entry","removeEntry","postInsulin","newInsulin","dispatch","options","method","body","JSON","stringify","headers","fetch","user_id","then","res","json","catch","console","error","deleteInsulin","insulinObj","id","postEntry","newEntry","deleteEntry","entryObj","fetchUser","name","username","updateUser","userData","log"],"mappings":"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","sourcesContent":["//action creators here\n\n//------------------user action creators--------------------//\n\nconst setUser = (user)=>({type:'SET_USER', payload:user})\n\nconst editUser = (user)=>({type:'EDIT_USER', payload:user})\n\n\n// const addUser = (user)=>({type:'ADD_USER', payload:user})\n\n//------------------insulin action creators--------------------//\n\n// const getInsulins = (insulins)=>({type:'GET_INSULINS', payload:insulins})\n\nexport const selectInsulin = (insulin)=>({type:'SELECT_INSULIN', payload:insulin})\n\nconst addInsulin = (insulin)=>({type:'ADD_INSULIN', payload:insulin})\n\nexport const removeInsulin = (insulin)=>({type:'REMOVE_INSULIN', payload:insulin})\n\n\n//------------------entry action creators--------------------//\n\nconst addEntry = (entry)=>({type:'ADD_ENTRY', payload:entry})\n\nexport const removeEntry = (entry)=>({type:'REMOVE_ENTRY', payload:entry})\n\n//thunk creators here\n\n//------------------insulin thunk creators--------------------//\n\n// export const fetchInsulins = (user)=>{\n//   return (dispatch)=>{\n//     return fetch(`http://localhost:3001/api/v1/users/${user}/insulins`)\n//     .then(res=>res.json())\n//     .then((res)=>dispatch(getInsulins(res)))\n//     .catch(console.error)\n//   }\n// }\n\n\n\nexport const postInsulin= (newInsulin)=>{\n  return (dispatch)=>{\n    const options = {\n      method: \"POST\",\n      body: JSON.stringify(newInsulin),\n      headers:{\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    }\n    return fetch(`http://localhost:3001/api/v1/users/${newInsulin.user_id}/insulins`, options)\n    .then(res=>res.json())\n    .then((res) => dispatch(addInsulin(res)))\n    .catch(console.error)\n  }\n}\n\n\n\nexport const deleteInsulin= (insulinObj)=>{\n  return (dispatch)=>{\n    const options = {\n      method: \"DELETE\",\n    }\n    return fetch(`http://localhost:3001/api/v1/users/${insulinObj.user_id}/insulins/${insulinObj.id}`, options)\n  }\n}\n\n\n//---------------entry thunk creators-----------------//\n\nexport const postEntry= (newEntry)=>{\n  return (dispatch)=>{\n    const options = {\n      method: \"POST\",\n      body: JSON.stringify(newEntry),\n      headers:{\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    }\n    return fetch(`http://localhost:3001/api/v1/users/${newEntry.user_id}/entries`, options)\n    .then(res=>res.json())\n    .then((res) => dispatch(addEntry(res)))\n    .catch(console.error)\n  }\n}\n\n\nexport const deleteEntry= (entryObj)=>{\n  return (dispatch)=>{\n    const options = {\n      method: \"DELETE\",\n    }\n    return fetch(`http://localhost:3001/api/v1/users/${entryObj.user_id}/entries/${entryObj.id}`, options)\n  }\n}\n\n\n\n\n//-----------------user thunk creators-----------------------------//\n\n\n\nexport const fetchUser = (name)=>{\n  return (dispatch)=>{\n    const options={\n      method: \"POST\",\n      body: JSON.stringify({user:{username: name}}),\n      headers:{\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    }\n    return fetch(`http://localhost:3001/api/v1/login`, options)\n    .then(res=>res.json())\n    // .then(res=>console.log(res.user))\n    .then((res)=>dispatch(setUser(res.user)))\n    .catch(console.error)\n  }\n}\n\nexport const updateUser = (userData)=>{\n  console.log(\"USERDATA IN PATCH\", userData)\n  return (dispatch)=>{\n    const options={\n      method: \"PATCH\",\n      body: JSON.stringify({user: userData}),\n      headers:{\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    }\n    return fetch(`http://localhost:3001/api/v1/users/${userData.id}`, options)\n    .then(res=>res.json())\n    .then((res)=>dispatch(editUser(res)))\n    .catch(console.error)\n  }\n}\n\n\n// export const postNewUser = (name)=>{\n//   return (dispatch)=>{\n//     const options = {\n//       method: \"POST\",\n//       body: JSON.stringify({user:{username:name}}),\n//       headers:{\n//         'Content-Type': 'application/json',\n//         'Accept': 'application/json'\n//       }\n//     }\n//     return fetch(`http://localhost:3001/api/v1/users`, options)\n//     .then(res=>res.json())\n//     .then((res) => dispatch(addUser(res)))\n//     .catch(console.error)\n\n  // }\n// }\n"]},"metadata":{},"sourceType":"module"}