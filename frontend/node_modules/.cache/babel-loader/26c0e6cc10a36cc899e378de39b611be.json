{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTimeDifference = exports.zeroPad = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/**\r\n * Pads a given string or number with zeros.\r\n *\r\n * @param {any} value Value to zero-pad.\r\n * @param {number} [length=2] Amount of characters to pad.\r\n * @returns Left-padded number/string.\r\n */\n\n\nvar zeroPad = exports.zeroPad = function zeroPad(value) {\n  var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n  if (length === 0) return value;\n  var strValue = String(value);\n  return strValue.length >= length ? strValue : ('0'.repeat(length) + strValue).slice(length * -1);\n};\n/**\r\n * Calculates the time difference between a given end date and the current date.\r\n *\r\n * @param {Date|string|number} date Date or timestamp representation of the end date.\r\n * @param {Object} [{ now = Date.now, precision = 0, controlled = false }={}]\r\n *  {function} [date=Date.now] Alternative function for returning the current date.\r\n *  {number} [precision=0] The precision on a millisecond basis.\r\n *  {boolean} [controlled=false] Defines whether the calculated value is already provided as the time difference or not.\r\n * @param {number} [precision=0] The precision on a millisecond basis.\r\n * @param {boolean} [controlled=false] Defines whether the calculated value is already provided as the time difference or not.\r\n * @returns Object that includes details about the time difference.\r\n */\n\n\nvar getTimeDifference = exports.getTimeDifference = function getTimeDifference(date) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$now = _ref.now,\n      now = _ref$now === undefined ? Date.now : _ref$now,\n      _ref$precision = _ref.precision,\n      precision = _ref$precision === undefined ? 0 : _ref$precision,\n      _ref$controlled = _ref.controlled,\n      controlled = _ref$controlled === undefined ? false : _ref$controlled;\n\n  var startDate = typeof date === 'string' ? new Date(date) : date;\n  var total = parseInt((Math.max(0, controlled ? startDate : startDate - now()) / 1000).toFixed(Math.max(0, Math.min(20, precision))) * 1000, 10);\n  var seconds = total / 1000;\n  return {\n    total: total,\n    days: Math.floor(seconds / (3600 * 24)),\n    hours: Math.floor(seconds / 3600 % 24),\n    minutes: Math.floor(seconds / 60 % 60),\n    seconds: Math.floor(seconds % 60),\n    milliseconds: Number((seconds % 1 * 1000).toFixed()),\n    completed: total <= 0\n  };\n};\n/**\r\n * A customizable countdown component for React.\r\n *\r\n * @export\r\n * @class Countdown\r\n * @extends {React.Component}\r\n */\n\n\nvar Countdown = function (_React$Component) {\n  _inherits(Countdown, _React$Component);\n\n  function Countdown(props) {\n    _classCallCheck(this, Countdown);\n\n    var _this = _possibleConstructorReturn(this, (Countdown.__proto__ || Object.getPrototypeOf(Countdown)).call(this, props));\n\n    _initialiseProps.call(_this);\n\n    var _this$props = _this.props,\n        date = _this$props.date,\n        now = _this$props.now,\n        precision = _this$props.precision,\n        controlled = _this$props.controlled;\n    _this.mounted = false;\n    _this.state = _extends({}, getTimeDifference(date, {\n      now: now,\n      precision: precision,\n      controlled: controlled\n    }));\n    return _this;\n  }\n\n  _createClass(Countdown, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.mounted = true;\n\n      if (!this.props.controlled) {\n        this.interval = setInterval(this.tick, this.props.intervalDelay);\n      }\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      var date = nextProps.date,\n          now = nextProps.now,\n          precision = nextProps.precision,\n          controlled = nextProps.controlled;\n      this.setDeltaState(getTimeDifference(date, {\n        now: now,\n        precision: precision,\n        controlled: controlled\n      }));\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.mounted = false;\n      this.clearInterval();\n    }\n  }, {\n    key: 'setDeltaState',\n    value: function setDeltaState(delta) {\n      if (!this.state.completed && delta.completed) {\n        this.clearInterval();\n\n        if (this.props.onComplete) {\n          this.props.onComplete(delta);\n        }\n      }\n\n      if (this.mounted) {\n        this.setState(_extends({}, delta));\n      }\n    }\n  }, {\n    key: 'getFormattedDelta',\n    value: function getFormattedDelta() {\n      var _state = this.state,\n          days = _state.days,\n          hours = _state.hours;\n      var _state2 = this.state,\n          minutes = _state2.minutes,\n          seconds = _state2.seconds;\n      var _props = this.props,\n          daysInHours = _props.daysInHours,\n          zeroPadLength = _props.zeroPadLength;\n\n      if (daysInHours) {\n        hours = zeroPad(hours + days * 24, zeroPadLength);\n        days = null;\n      } else {\n        hours = zeroPad(hours, Math.min(2, zeroPadLength));\n      }\n\n      return {\n        days: days,\n        hours: hours,\n        minutes: zeroPad(minutes, Math.min(2, zeroPadLength)),\n        seconds: zeroPad(seconds, Math.min(2, zeroPadLength))\n      };\n    }\n  }, {\n    key: 'clearInterval',\n    value: function (_clearInterval) {\n      function clearInterval() {\n        return _clearInterval.apply(this, arguments);\n      }\n\n      clearInterval.toString = function () {\n        return _clearInterval.toString();\n      };\n\n      return clearInterval;\n    }(function () {\n      clearInterval(this.interval);\n      delete this.interval;\n    })\n  }, {\n    key: 'render',\n    value: function render() {\n      var formattedDelta = this.getFormattedDelta();\n\n      if (this.props.renderer) {\n        return this.props.renderer(_extends({}, this.props, this.state, formattedDelta));\n      }\n\n      if (this.state.completed && this.props.children) {\n        var computedProps = _extends({}, this.props, this.state, formattedDelta);\n\n        delete computedProps.children;\n        return _react2.default.cloneElement(this.props.children, {\n          countdown: computedProps\n        });\n      } else {\n        var days = formattedDelta.days,\n            hours = formattedDelta.hours,\n            minutes = formattedDelta.minutes,\n            seconds = formattedDelta.seconds;\n        return _react2.default.createElement('span', null, days, days != null ? ':' : '', hours, ':', minutes, ':', seconds);\n      }\n    }\n  }]);\n\n  return Countdown;\n}(_react2.default.Component);\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this2 = this;\n\n  this.tick = function () {\n    var _props2 = _this2.props,\n        date = _props2.date,\n        now = _props2.now,\n        precision = _props2.precision,\n        controlled = _props2.controlled,\n        onTick = _props2.onTick;\n    var delta = getTimeDifference(date, {\n      now: now,\n      precision: precision,\n      controlled: controlled\n    });\n\n    _this2.setDeltaState(_extends({}, delta));\n\n    if (onTick && delta.total > 0) {\n      onTick(delta);\n    }\n  };\n};\n\nexports.default = Countdown;\nCountdown.propTypes = {\n  date: _propTypes2.default.oneOfType([_propTypes2.default.instanceOf(Date), _propTypes2.default.string, _propTypes2.default.number]).isRequired,\n  // eslint-disable-line react/no-unused-prop-types\n  daysInHours: _propTypes2.default.bool,\n  zeroPadLength: _propTypes2.default.number,\n  controlled: _propTypes2.default.bool,\n  intervalDelay: _propTypes2.default.number,\n  precision: _propTypes2.default.number,\n  children: _propTypes2.default.any,\n  // eslint-disable-line react/forbid-prop-types\n  renderer: _propTypes2.default.func,\n  now: _propTypes2.default.func,\n  // eslint-disable-line react/no-unused-prop-types\n  onTick: _propTypes2.default.func,\n  onComplete: _propTypes2.default.func\n};\nCountdown.defaultProps = {\n  daysInHours: false,\n  zeroPadLength: 2,\n  controlled: false,\n  intervalDelay: 1000,\n  precision: 0,\n  children: null\n};","map":null,"metadata":{},"sourceType":"script"}