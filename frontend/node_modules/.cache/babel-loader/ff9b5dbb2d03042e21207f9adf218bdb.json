{"ast":null,"code":"//action creators here\nvar getInsulins = function getInsulins(insulins) {\n  return {\n    type: 'GET_INSULINS',\n    payload: insulins\n  };\n};\n\nexport var selectInsulin = function selectInsulin(insulin) {\n  return {\n    type: 'SELECT_INSULIN',\n    payload: insulin\n  };\n}; //thunk creators here\n\nexport var addEntry = function addEntry(newEntry) {\n  return function (dispatch) {\n    var options = {\n      method: \"POST\",\n      body: JSON.stringify(newEntry),\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    };\n    return fetch(\"http://localhost:3001/api/v1/users/\".concat(newEntry.user_id, \"/entries\"), options).then(function (res) {\n      return res.json();\n    }).then(function (res) {\n      return dispatch(addEntry(res));\n    }).catch(console.error);\n  };\n};\nexport var fetchInsulins = function fetchInsulins(user) {\n  return function (dispatch) {\n    return fetch(\"http://localhost:3001/api/v1/users/\".concat(user, \"/insulins\")).then(function (res) {\n      return res.json();\n    }).then(function (res) {\n      return dispatch(getInsulins(res));\n    }).catch(console.error);\n  };\n};","map":{"version":3,"sources":["/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/src/Redux/actions.js"],"names":["getInsulins","insulins","type","payload","selectInsulin","insulin","addEntry","newEntry","dispatch","options","method","body","JSON","stringify","headers","fetch","user_id","then","res","json","catch","console","error","fetchInsulins","user"],"mappings":"AAAA;AACA,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD;AAAA,SAAa;AAACC,IAAAA,IAAI,EAAC,cAAN;AAAsBC,IAAAA,OAAO,EAACF;AAA9B,GAAb;AAAA,CAApB;;AAEA,OAAO,IAAMG,aAAa,GAAG,SAAhBA,aAAgB,CAACC,OAAD;AAAA,SAAY;AAACH,IAAAA,IAAI,EAAC,gBAAN;AAAwBC,IAAAA,OAAO,EAACE;AAAhC,GAAZ;AAAA,CAAtB,C,CAGP;;AAEA,OAAO,IAAMC,QAAQ,GAAE,SAAVA,QAAU,CAACC,QAAD,EAAY;AACjC,SAAO,UAACC,QAAD,EAAY;AACjB,QAAMC,OAAO,GAAG;AACdC,MAAAA,MAAM,EAAE,MADM;AAEdC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,QAAf,CAFQ;AAGdO,MAAAA,OAAO,EAAC;AACN,wBAAgB,kBADV;AAEN,kBAAU;AAFJ;AAHM,KAAhB;AAQA,WAAOC,KAAK,8CAAuCR,QAAQ,CAACS,OAAhD,eAAmEP,OAAnE,CAAL,CACNQ,IADM,CACD,UAAAC,GAAG;AAAA,aAAEA,GAAG,CAACC,IAAJ,EAAF;AAAA,KADF,EAENF,IAFM,CAED,UAACC,GAAD;AAAA,aAASV,QAAQ,CAACF,QAAQ,CAACY,GAAD,CAAT,CAAjB;AAAA,KAFC,EAGNE,KAHM,CAGAC,OAAO,CAACC,KAHR,CAAP;AAID,GAbD;AAcD,CAfM;AAkBP,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,IAAD,EAAQ;AACnC,SAAO,UAAChB,QAAD,EAAY;AACjB,WAAOO,KAAK,8CAAuCS,IAAvC,eAAL,CACNP,IADM,CACD,UAAAC,GAAG;AAAA,aAAEA,GAAG,CAACC,IAAJ,EAAF;AAAA,KADF,EAENF,IAFM,CAED,UAACC,GAAD;AAAA,aAAOV,QAAQ,CAACR,WAAW,CAACkB,GAAD,CAAZ,CAAf;AAAA,KAFC,EAGNE,KAHM,CAGAC,OAAO,CAACC,KAHR,CAAP;AAID,GALD;AAMD,CAPM","sourcesContent":["//action creators here\nconst getInsulins = (insulins)=>({type:'GET_INSULINS', payload:insulins})\n\nexport const selectInsulin = (insulin)=>({type:'SELECT_INSULIN', payload:insulin})\n\n\n//thunk creators here\n\nexport const addEntry= (newEntry)=>{\n  return (dispatch)=>{\n    const options = {\n      method: \"POST\",\n      body: JSON.stringify(newEntry),\n      headers:{\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    }\n    return fetch(`http://localhost:3001/api/v1/users/${newEntry.user_id}/entries`, options)\n    .then(res=>res.json())\n    .then((res) => dispatch(addEntry(res)))\n    .catch(console.error)\n  }\n}\n\n\nexport const fetchInsulins = (user)=>{\n  return (dispatch)=>{\n    return fetch(`http://localhost:3001/api/v1/users/${user}/insulins`)\n    .then(res=>res.json())\n    .then((res)=>dispatch(getInsulins(res)))\n    .catch(console.error)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}