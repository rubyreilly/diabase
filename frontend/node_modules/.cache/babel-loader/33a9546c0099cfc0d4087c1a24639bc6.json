{"ast":null,"code":"import _classCallCheck from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/src/Components/InsulinLog.js\";\nimport React, { Component } from 'react';\nimport LogEntry from './LogEntry';\nimport { connect } from 'react-redux';\n\nvar InsulinLog =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(InsulinLog, _Component);\n\n  function InsulinLog() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, InsulinLog);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(InsulinLog)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.generateLogEntries = function (insulins) {\n      if (insulins.length === 0) {\n        return null;\n      } else {\n        var insulin = insulins.find(function (insulin) {\n          return insulin.id === _this.props.selectedInsulin;\n        });\n        return insulin.all_associated_entries.map(function (entryObj) {\n          return console.log(entryObj);\n        }); // (entryObj=><LogEntry entryObj={entryObj} key={entryObj.id}/>)\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(InsulinLog, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"ui bottom attached active tab segment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"ui celled table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"Date\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"Start Time\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"End Time\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Time Left\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Status\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, this.generateLogEntries(this.props.insulins))));\n    }\n  }]);\n\n  return InsulinLog;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    selectedInsulin: state.selectedInsulin,\n    insulins: state.insulins\n  };\n};\n\nexport default connect(mapStateToProps)(InsulinLog);","map":{"version":3,"sources":["/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/src/Components/InsulinLog.js"],"names":["React","Component","LogEntry","connect","InsulinLog","generateLogEntries","insulins","length","insulin","find","id","props","selectedInsulin","all_associated_entries","map","entryObj","console","log","mapStateToProps","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;IAEMC,U;;;;;;;;;;;;;;;;;;UACJC,kB,GAAmB,UAACC,QAAD,EAAY;AAC7B,UAAIA,QAAQ,CAACC,MAAT,KAAkB,CAAtB,EAAwB;AACtB,eAAO,IAAP;AACD,OAFD,MAEK;AACH,YAAMC,OAAO,GAAGF,QAAQ,CAACG,IAAT,CAAc,UAACD,OAAD;AAAA,iBAAWA,OAAO,CAACE,EAAR,KAAe,MAAKC,KAAL,CAAWC,eAArC;AAAA,SAAd,CAAhB;AACA,eAAOJ,OAAO,CAACK,sBAAR,CAA+BC,GAA/B,CAAmC,UAACC,QAAD;AAAA,iBAAYC,OAAO,CAACC,GAAR,CAAYF,QAAZ,CAAZ;AAAA,SAAnC,CAAP,CAFG,CAGH;AACD;AACF,K;;;;;;;6BAEO;AACN,aACE;AAAK,QAAA,SAAS,EAAC,uCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAO,QAAA,SAAS,EAAC,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHA,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJA,EAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALA,CADJ,CADA,EAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,KAAKV,kBAAL,CAAwB,KAAKM,KAAL,CAAWL,QAAnC,CADD,CAVA,CADA,CADF;AAkBD;;;;EA9BsBL,S;;AAiCzB,IAAMiB,eAAe,GAAE,SAAjBA,eAAiB,CAACC,KAAD,EAAS;AAC9B,SAAO;AACLP,IAAAA,eAAe,EAAEO,KAAK,CAACP,eADlB;AAELN,IAAAA,QAAQ,EAAEa,KAAK,CAACb;AAFX,GAAP;AAID,CALD;;AAQA,eAAeH,OAAO,CAACe,eAAD,CAAP,CAAyBd,UAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport LogEntry from './LogEntry'\nimport {connect} from 'react-redux'\n\nclass InsulinLog extends Component{\n  generateLogEntries=(insulins)=>{\n    if (insulins.length===0){\n      return null\n    }else{\n      const insulin = insulins.find((insulin)=>insulin.id === this.props.selectedInsulin)\n      return insulin.all_associated_entries.map((entryObj)=>console.log(entryObj))\n      // (entryObj=><LogEntry entryObj={entryObj} key={entryObj.id}/>)\n    }\n  }\n\n  render(){\n    return(\n      <div className=\"ui bottom attached active tab segment\">\n      <table className=\"ui celled table\">\n      <thead>\n          <tr>\n          <th>Date</th>\n          <th>Start Time</th>\n          <th>End Time</th>\n          <th>Time Left</th>\n          <th>Status</th>\n          </tr>\n        </thead>\n      <tbody>\n      {this.generateLogEntries(this.props.insulins)}\n      </tbody>\n      </table>\n    </div>\n    )\n  }\n}\n\nconst mapStateToProps= (state)=>{\n  return {\n    selectedInsulin: state.selectedInsulin,\n    insulins: state.insulins\n  }\n}\n\n\nexport default connect(mapStateToProps)(InsulinLog)\n"]},"metadata":{},"sourceType":"module"}