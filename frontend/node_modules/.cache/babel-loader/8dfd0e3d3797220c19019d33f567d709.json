{"ast":null,"code":"var initialState = {\n  user: {},\n  insulins: [],\n  entries: []\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n\nexport { reducer };","map":{"version":3,"sources":["/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/src/Redux/reducer.js"],"names":["initialState","user","insulins","entries","reducer","state","action","type"],"mappings":"AAAA,IAAMA,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAC,EADc;AAEnBC,EAAAA,QAAQ,EAAC,EAFU;AAGnBC,EAAAA,OAAO,EAAE;AAHU,CAArB;;AAMA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAiC;AAAA,MAAhCC,KAAgC,uEAAxBL,YAAwB;AAAA,MAAVM,MAAU;;AAC/C,UAAQA,MAAM,CAACC,IAAf;AAGE;AACE,aAAOF,KAAP;AAJJ;AAMD,CAPD;;AASA,SAAQD,OAAR","sourcesContent":["const initialState = {\n  user:{},\n  insulins:[],\n  entries: []\n}\n\nconst reducer = (state = initialState, action) =>{\n  switch (action.type){\n    \n\n    default:\n      return state\n  }\n}\n\nexport {reducer}\n"]},"metadata":{},"sourceType":"module"}