{"ast":null,"code":"import _classCallCheck from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/src/Components/LogEntry.js\";\nimport React, { Component } from 'react';\nimport moment from 'moment';\n\nvar LogEntry =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LogEntry, _Component);\n\n  function LogEntry() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LogEntry);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LogEntry)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.calculateEndTime = function (start) {\n      var duration = _this.props.insulinObj.insulin_duration_in_minutes;\n      return moment(start).add(duration, 'minutes').calendar();\n    };\n\n    return _this;\n  }\n\n  _createClass(LogEntry, [{\n    key: \"render\",\n    value: function render() {\n      var entryObj = this.props.entryObj; // const datetime = new Date(entryObj.entry_date_and_time)\n\n      var formattedDate = moment(entryObj.entry_date_and_time).format('ll');\n      var formattedStartTime = moment(entryObj.entry_date_and_time).format('LT'); // const formattedDate = datetime.toDateString()\n      // const formattedStartTime = datetime.toLocaleTimeString('en-US')\n\n      var formattedEndTime = this.calculateEndTime(entryObj.entry_date_and_time);\n      return React.createElement(\"tr\", {\n        className: entryObj.status === \"active\" ? \"ui inverted green table segment\" : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        \"data-label\": \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, formattedDate), React.createElement(\"td\", {\n        \"data-label\": \"start-time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, formattedStartTime), React.createElement(\"td\", {\n        \"data-label\": \"end_time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, formattedEndTime), React.createElement(\"td\", {\n        \"data-label\": \"time_left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"time left\"), React.createElement(\"td\", {\n        \"data-label\": \"status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"status\"));\n    }\n  }]);\n\n  return LogEntry;\n}(Component);\n\nexport default LogEntry;","map":{"version":3,"sources":["/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/src/Components/LogEntry.js"],"names":["React","Component","moment","LogEntry","calculateEndTime","start","duration","props","insulinObj","insulin_duration_in_minutes","add","calendar","entryObj","formattedDate","entry_date_and_time","format","formattedStartTime","formattedEndTime","status"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,QAAnB;;IAGMC,Q;;;;;;;;;;;;;;;;;;UAEJC,gB,GAAiB,UAACC,KAAD,EAAS;AACxB,UAAMC,QAAQ,GAAG,MAAKC,KAAL,CAAWC,UAAX,CAAsBC,2BAAvC;AAEA,aAAOP,MAAM,CAACG,KAAD,CAAN,CAAcK,GAAd,CAAkBJ,QAAlB,EAA4B,SAA5B,EAAuCK,QAAvC,EAAP;AACD,K;;;;;;;6BAGO;AAAA,UACCC,QADD,GACW,KAAKL,KADhB,CACCK,QADD,EAEN;;AACA,UAAMC,aAAa,GAAGX,MAAM,CAACU,QAAQ,CAACE,mBAAV,CAAN,CAAqCC,MAArC,CAA4C,IAA5C,CAAtB;AACA,UAAMC,kBAAkB,GAAGd,MAAM,CAACU,QAAQ,CAACE,mBAAV,CAAN,CAAqCC,MAArC,CAA4C,IAA5C,CAA3B,CAJM,CAKN;AACA;;AACA,UAAME,gBAAgB,GAAG,KAAKb,gBAAL,CAAsBQ,QAAQ,CAACE,mBAA/B,CAAzB;AAEA,aACE;AAAI,QAAA,SAAS,EAAEF,QAAQ,CAACM,MAAT,KAAoB,QAApB,GAA+B,iCAA/B,GAAmE,IAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAI,sBAAW,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuBL,aAAvB,CADA,EAEA;AAAI,sBAAW,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6BG,kBAA7B,CAFA,EAGA;AAAI,sBAAW,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2BC,gBAA3B,CAHA,EAIA;AAAI,sBAAW,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJA,EAKA;AAAI,sBAAW,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALA,CADF;AASD;;;;EA3BoBhB,S;;AA8BvB,eAAeE,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport moment from 'moment'\n\n\nclass LogEntry extends Component{\n\n  calculateEndTime=(start)=>{\n    const duration = this.props.insulinObj.insulin_duration_in_minutes\n\n    return moment(start).add(duration, 'minutes').calendar()\n  }\n\n\n  render(){\n    const {entryObj}=this.props\n    // const datetime = new Date(entryObj.entry_date_and_time)\n    const formattedDate = moment(entryObj.entry_date_and_time).format('ll')\n    const formattedStartTime = moment(entryObj.entry_date_and_time).format('LT')\n    // const formattedDate = datetime.toDateString()\n    // const formattedStartTime = datetime.toLocaleTimeString('en-US')\n    const formattedEndTime = this.calculateEndTime(entryObj.entry_date_and_time)\n\n    return(\n      <tr className={entryObj.status === \"active\" ? \"ui inverted green table segment\" : null}>\n      <td data-label=\"date\">{formattedDate}</td>\n      <td data-label=\"start-time\">{formattedStartTime}</td>\n      <td data-label=\"end_time\">{formattedEndTime}</td>\n      <td data-label=\"time_left\">time left</td>\n      <td data-label=\"status\">status</td>\n      </tr>\n    )\n  }\n}\n\nexport default LogEntry\n"]},"metadata":{},"sourceType":"module"}