{"ast":null,"code":"import _classCallCheck from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/src/Components/LogEntry.js\";\nimport React, { Component } from 'react';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport { deleteEntry as _deleteEntry, removeEntry as _removeEntry } from '../Redux/actions';\n\nvar LogEntry =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LogEntry, _Component);\n\n  function LogEntry() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LogEntry);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LogEntry)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.calculateEndTime = function (start) {\n      var duration = _this.props.insulinObj.insulin_duration_in_minutes;\n      return moment(start).add(duration, 'minutes').format();\n    };\n\n    _this.handleDelete = function (e) {\n      _this.props.removeEntry(_this.props.entryObj);\n\n      _this.props.deleteEntry(_this.props.entryObj);\n    };\n\n    return _this;\n  }\n\n  _createClass(LogEntry, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var entryObj = this.props.entryObj;\n      var formattedDate = moment(entryObj.entry_date_and_time).format('dddd ll');\n      var formattedStartTime = moment(entryObj.entry_date_and_time).format('LT');\n      var formattedEndTime = moment(this.calculateEndTime(entryObj.entry_date_and_time)).calendar();\n      return React.createElement(\"tr\", {\n        className: entryObj.status === \"active\" ? \"ui green table segment\" : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        \"data-label\": \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, formattedDate), React.createElement(\"td\", {\n        \"data-label\": \"start-time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, formattedStartTime), React.createElement(\"td\", {\n        \"data-label\": \"end_time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, entryObj.status === \"active\" ? formattedEndTime : \"-\"), React.createElement(\"td\", {\n        \"data-label\": \"time_left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, entryObj.time_left), React.createElement(\"td\", {\n        \"data-label\": \"note\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, entryObj.note === \"\" || entryObj.note === null ? \"-\" : entryObj.note), React.createElement(\"td\", {\n        \"data-label\": \"status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, entryObj.status), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick(e) {\n          return _this2.handleDelete(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"delete\")));\n    }\n  }]);\n\n  return LogEntry;\n}(Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    deleteEntry: function deleteEntry(entryObj) {\n      return dispatch(_deleteEntry(entryObj));\n    },\n    removeEntry: function removeEntry(entryObj) {\n      return dispatch(_removeEntry(entryObj));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(LogEntry);","map":{"version":3,"sources":["/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/src/Components/LogEntry.js"],"names":["React","Component","moment","connect","deleteEntry","removeEntry","LogEntry","calculateEndTime","start","duration","props","insulinObj","insulin_duration_in_minutes","add","format","handleDelete","e","entryObj","formattedDate","entry_date_and_time","formattedStartTime","formattedEndTime","calendar","status","time_left","note","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport moment from 'moment'\nimport {connect} from 'react-redux'\nimport {deleteEntry, removeEntry} from '../Redux/actions'\n\n\n\nclass LogEntry extends Component{\n\n  calculateEndTime=(start)=>{\n    const duration = this.props.insulinObj.insulin_duration_in_minutes\n    return moment(start).add(duration, 'minutes').format()\n  }\n\n  handleDelete=(e)=>{\n    this.props.removeEntry(this.props.entryObj)\n    this.props.deleteEntry(this.props.entryObj)\n\n  }\n\n\n  render(){\n    const {entryObj}=this.props\n    const formattedDate = moment(entryObj.entry_date_and_time).format('dddd ll')\n    const formattedStartTime = moment(entryObj.entry_date_and_time).format('LT')\n    const formattedEndTime = moment(this.calculateEndTime(entryObj.entry_date_and_time)).calendar()\n\n\n    return(\n      <tr className={entryObj.status === \"active\" ? \"ui green table segment\" : null}>\n      <td data-label=\"date\">{formattedDate}</td>\n      <td data-label=\"start-time\">{formattedStartTime}</td>\n      <td data-label=\"end_time\">{entryObj.status === \"active\" ? formattedEndTime : \"-\"}</td>\n      <td data-label=\"time_left\">{entryObj.time_left}</td>\n      <td data-label=\"note\">{entryObj.note === \"\" || entryObj.note === null ? \"-\":entryObj.note}</td>\n      <td data-label=\"status\">{entryObj.status}</td>\n      <td><button onClick={(e)=>this.handleDelete(e)}>delete</button></td>\n      </tr>\n    )\n  }\n}\n\nconst mapDispatchToProps=(dispatch)=>{\n  return{\n    deleteEntry:(entryObj)=>dispatch(deleteEntry(entryObj)),\n    removeEntry:(entryObj)=>dispatch(removeEntry(entryObj))\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(LogEntry)\n"]},"metadata":{},"sourceType":"module"}