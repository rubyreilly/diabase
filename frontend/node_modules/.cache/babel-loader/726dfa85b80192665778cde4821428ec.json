{"ast":null,"code":"import _defineProperty from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/src/Components/NewEntryForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { postEntry as _postEntry } from '../Redux/actions';\n\nvar NewEntryForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewEntryForm, _Component);\n\n  function NewEntryForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NewEntryForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NewEntryForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      time: moment.locale(),\n      insulin: \"\"\n    };\n\n    _this.handleChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value), function () {\n        return console.log(_this.state);\n      });\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      var insulinObj = _this.props.insulins.find(function (insulin) {\n        return insulin.insulin_name == _this.state.insulin;\n      });\n\n      var newEntry = {\n        user_id: _this.props.user,\n        entry_date_and_time: _this.state.time.toISOString(),\n        insulin_id: insulinObj.id\n      };\n\n      _this.props.postEntry(newEntry);\n    };\n\n    _this.generateInsulinDropDown = function () {\n      return _this.props.insulins.map(function (insulin) {\n        return React.createElement(\"option\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, insulin.insulin_name);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(NewEntryForm, [{\n    key: \"render\",\n    // currentTime = ()=>{\n    //   return new Date()\n    // }\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"form\", {\n        className: \"ui form\",\n        id: \"newform\",\n        onSubmit: function onSubmit(e) {\n          return _this2.handleSubmit(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"fields\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        name: \"insulin\",\n        value: this.state.insulin,\n        onChange: function onChange(e) {\n          return _this2.handleChange(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        selected: true,\n        disabled: true,\n        hidden: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"select insulin\"), this.generateInsulinDropDown()))), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"add to log\"));\n    }\n  }]);\n\n  return NewEntryForm;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    insulins: state.insulins,\n    user: state.user\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    postEntry: function postEntry(newEntry) {\n      return dispatch(_postEntry(newEntry));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewEntryForm);","map":{"version":3,"sources":["/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/src/Components/NewEntryForm.js"],"names":["React","Component","connect","postEntry","NewEntryForm","state","time","moment","locale","insulin","handleChange","e","setState","target","name","value","console","log","handleSubmit","preventDefault","insulinObj","props","insulins","find","insulin_name","newEntry","user_id","user","entry_date_and_time","toISOString","insulin_id","id","generateInsulinDropDown","map","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {connect} from 'react-redux'\nimport {postEntry} from '../Redux/actions'\n\nclass NewEntryForm extends Component{\n\n  state = {\n    time:moment.locale(),\n    insulin:\"\"\n  }\n\n  handleChange=(e)=>{\n    this.setState({\n      [e.target.name]: e.target.value\n    }, ()=>console.log(this.state))\n  }\n\n  handleSubmit=(e)=>{\n    e.preventDefault()\n    const insulinObj=this.props.insulins.find((insulin)=>{\n      return insulin.insulin_name == this.state.insulin\n    })\n\n    const newEntry = {\n      user_id: this.props.user,\n      entry_date_and_time: this.state.time.toISOString(),\n      insulin_id : insulinObj.id}\n    this.props.postEntry(newEntry)\n  }\n\n  generateInsulinDropDown=()=>{\n    return this.props.insulins.map(insulin=><option>{insulin.insulin_name}</option>)\n  }\n\n  // currentTime = ()=>{\n  //   return new Date()\n  // }\n\n  render(){\n\n    return(\n      <form className='ui form' id='newform' onSubmit={(e)=>this.handleSubmit(e)}>\n      <div className='fields'>\n\n      <div className='field'>\n\n      <select name='insulin' value={this.state.insulin} onChange={(e)=>this.handleChange(e)}>\n      <option value=\"\" selected disabled hidden>select insulin</option>\n      {this.generateInsulinDropDown()}\n      </select>\n\n      </div>\n\n      </div>\n      <button>add to log</button>\n\n      </form>\n    )\n  }\n}\n\nconst mapStateToProps= (state)=>{\n  return {\n    insulins: state.insulins,\n    user: state.user\n  }\n}\n\nconst mapDispatchToProps=(dispatch)=>{\n  return{\n    postEntry:(newEntry)=>dispatch(postEntry(newEntry)),\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewEntryForm)\n"]},"metadata":{},"sourceType":"module"}