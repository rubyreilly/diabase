{"ast":null,"code":"import _classCallCheck from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/src/Components/LogContainer.js\";\nimport React, { Component } from 'react'; // import {reducer} from '../Redux/reducer'\n\nimport { connect } from 'react-redux';\nimport { fetchInsulins as _fetchInsulins, selectInsulin as _selectInsulin } from '../Redux/actions';\nimport InsulinLog from './InsulinLog';\n\nvar LogContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LogContainer, _Component);\n\n  function LogContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LogContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LogContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.generateTabs = function (insulins) {\n      var _this$props = _this.props,\n          selected = _this$props.selected,\n          selectInsulin = _this$props.selectInsulin;\n      return insulins.map(function (insulinObj) {\n        return React.createElement(\"div\", {\n          className: selected === insulinObj.id ? \"active item\" : \"item\",\n          onClick: function onClick() {\n            return selectInsulin(insulinObj.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, insulinObj.insulin_name);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(LogContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchInsulins();\n    } // generateTabs=(insulins)=>{\n    //   const {selectedInsulin , selectInsulin} = this.props\n    //   return insulins.map(insulinObj=>{\n    //     if (selectedInsulin === insulinObj.id){\n    //       return <div className=\"active item\"\n    //       onClick={()=> selectInsulin(insulinObj.id)}>\n    //       {insulinObj.insulin_name}\n    //       </div>\n    //     }else{\n    //       return <div className=\"item\" onClick={()=> selectInsulin(insulinObj.id)}>\n    // {insulinObj.insulin_name}</div>\n    //     }\n    //   })\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: \"log\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ui top attached tabular menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, this.generateTabs(this.props.insulins)), React.createElement(InsulinLog, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return LogContainer;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    insulins: state.insulins,\n    selectedInsulin: state.selectInsulin\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchInsulins: function fetchInsulins() {\n      return dispatch(_fetchInsulins());\n    },\n    selectInsulin: function selectInsulin() {\n      return dispatch(_selectInsulin());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LogContainer);","map":{"version":3,"sources":["/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/src/Components/LogContainer.js"],"names":["React","Component","connect","fetchInsulins","selectInsulin","InsulinLog","LogContainer","generateTabs","insulins","props","selected","map","insulinObj","id","insulin_name","mapStateToProps","state","selectedInsulin","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,aAAa,IAAbA,cAAR,EAAuBC,aAAa,IAAbA,cAAvB,QAA2C,kBAA3C;AACA,OAAOC,UAAP,MAAuB,cAAvB;;IAGMC,Y;;;;;;;;;;;;;;;;;;UAsBJC,Y,GAAa,UAACC,QAAD,EAAY;AAAA,wBACY,MAAKC,KADjB;AAAA,UAChBC,QADgB,eAChBA,QADgB;AAAA,UACLN,aADK,eACLA,aADK;AAEvB,aAAOI,QAAQ,CAACG,GAAT,CAAa,UAAAC,UAAU,EAAE;AAC9B,eAAO;AAAK,UAAA,SAAS,EAAEF,QAAQ,KAAKE,UAAU,CAACC,EAAxB,GAA6B,aAA7B,GAA2C,MAA3D;AACP,UAAA,OAAO,EAAE;AAAA,mBAAKT,aAAa,CAACQ,UAAU,CAACC,EAAZ,CAAlB;AAAA,WADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEND,UAAU,CAACE,YAFL,CAAP;AAID,OALM,CAAP;AAMD,K;;;;;;;wCA5BkB;AACjB,WAAKL,KAAL,CAAWN,aAAX;AAED,K,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;6BAaQ;AAEN,aACE;AAAK,QAAA,EAAE,EAAC,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEA;AAAK,QAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKI,YAAL,CAAkB,KAAKE,KAAL,CAAWD,QAA7B,CADH,CAFA,EAMA,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANA,CADF;AAYD;;;;EA/CwBP,S;;AAkD3B,IAAMc,eAAe,GAAE,SAAjBA,eAAiB,CAACC,KAAD,EAAS;AAC9B,SAAO;AACLR,IAAAA,QAAQ,EAAEQ,KAAK,CAACR,QADX;AAELS,IAAAA,eAAe,EAAED,KAAK,CAACZ;AAFlB,GAAP;AAID,CALD;;AAOA,IAAMc,kBAAkB,GAAC,SAAnBA,kBAAmB,CAACC,QAAD,EAAY;AACnC,SAAM;AACJhB,IAAAA,aAAa,EAAC;AAAA,aAAIgB,QAAQ,CAAChB,cAAa,EAAd,CAAZ;AAAA,KADV;AAEJC,IAAAA,aAAa,EAAC;AAAA,aAAIe,QAAQ,CAACf,cAAa,EAAd,CAAZ;AAAA;AAFV,GAAN;AAID,CALD;;AAQA,eAAeF,OAAO,CAACa,eAAD,EAAiBG,kBAAjB,CAAP,CAA4CZ,YAA5C,CAAf","sourcesContent":["import React, { Component } from 'react';\n// import {reducer} from '../Redux/reducer'\nimport {connect} from 'react-redux'\nimport {fetchInsulins, selectInsulin} from '../Redux/actions'\nimport InsulinLog from './InsulinLog'\n\n\nclass LogContainer extends Component{\n\n  componentDidMount(){\n    this.props.fetchInsulins()\n\n  }\n\n  // generateTabs=(insulins)=>{\n  //   const {selectedInsulin , selectInsulin} = this.props\n  //   return insulins.map(insulinObj=>{\n  //     if (selectedInsulin === insulinObj.id){\n  //       return <div className=\"active item\"\n  //       onClick={()=> selectInsulin(insulinObj.id)}>\n  //       {insulinObj.insulin_name}\n  //       </div>\n  //     }else{\n  //       return <div className=\"item\" onClick={()=> selectInsulin(insulinObj.id)}>\n  // {insulinObj.insulin_name}</div>\n  //     }\n  //   })\n  // }\n\n  generateTabs=(insulins)=>{\n    const {selected , selectInsulin} = this.props\n    return insulins.map(insulinObj=>{\n      return <div className={selected === insulinObj.id ? \"active item\":\"item\"}\n      onClick={()=> selectInsulin(insulinObj.id)}>\n      {insulinObj.insulin_name}\n      </div>\n    })\n  }\n\n\n  render(){\n\n    return(\n      <div id='log'>\n\n      <div className=\"ui top attached tabular menu\">\n        {this.generateTabs(this.props.insulins)}\n\n      </div>\n      <InsulinLog/>\n\n\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps= (state)=>{\n  return {\n    insulins: state.insulins,\n    selectedInsulin: state.selectInsulin\n  }\n}\n\nconst mapDispatchToProps=(dispatch)=>{\n  return{\n    fetchInsulins:()=>dispatch(fetchInsulins()),\n    selectInsulin:()=>dispatch(selectInsulin())\n  }\n}\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(LogContainer)\n"]},"metadata":{},"sourceType":"module"}