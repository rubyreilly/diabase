{"ast":null,"code":"import _classCallCheck from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport HomeContainer from './Components/HomeContainer';\nimport NavBar from './Components/NavBar';\nimport Header from './Components/Header';\nimport TimerContainer from './Components/TimerContainer';\nimport 'semantic-ui-css/semantic.min.css';\nimport { connect } from 'react-redux';\nimport { fetchInsulins as _fetchInsulins, getActiveEntries } from './Redux/actions';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.componentDidMount = function () {\n      _this.props.fetchInsulins();\n\n      _this.props.getActiveEntries();\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ui three column grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(NavBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }))), React.createElement(TimerContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }), React.createElement(HomeContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchInsulins: function fetchInsulins() {\n      return dispatch(_fetchInsulins());\n    } // getActiveEntries:(entry)=>dispatch(getActiveEntries(entry))\n\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/src/App.js"],"names":["React","Component","HomeContainer","NavBar","Header","TimerContainer","connect","fetchInsulins","getActiveEntries","App","componentDidMount","props","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAO,kCAAP;AAEA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,aAAa,IAAbA,cAAR,EAAuBC,gBAAvB,QAA8C,iBAA9C;AAIA,OAAO,WAAP;;IAEMC,G;;;;;;;;;;;;;;;;;;UAEJC,iB,GAAkB,YAAI;AACpB,YAAKC,KAAL,CAAWJ,aAAX;;AACA,YAAKI,KAAL,CAAWH,gBAAX;AACD,K;;;;;;;6BAEQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACF,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADE,CADF,EAGA;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CAHA,CADA,EAMA,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANA,EAOA,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPA,CADF;AAWD;;;;EAnBeP,S;;AAsBlB,IAAMW,kBAAkB,GAAC,SAAnBA,kBAAmB,CAACC,QAAD,EAAY;AACnC,SAAM;AACJN,IAAAA,aAAa,EAAC;AAAA,aAAIM,QAAQ,CAACN,cAAa,EAAd,CAAZ;AAAA,KADV,CAEJ;;AAFI,GAAN;AAID,CALD;;AAQA,eAAeD,OAAO,CAAC,IAAD,EAAMM,kBAAN,CAAP,CAAiCH,GAAjC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport HomeContainer from './Components/HomeContainer'\nimport NavBar from './Components/NavBar'\nimport Header from './Components/Header'\nimport TimerContainer from './Components/TimerContainer'\nimport 'semantic-ui-css/semantic.min.css';\n\nimport {connect} from 'react-redux'\nimport {fetchInsulins, getActiveEntries} from './Redux/actions'\n\n\n\nimport './App.css';\n\nclass App extends Component {\n\n  componentDidMount=()=>{\n    this.props.fetchInsulins()\n    this.props.getActiveEntries()\n  }\n\n  render() {\n    return (\n      <div>\n      <div className=\"ui three column grid\">\n        <div className=\"column\">\n      <NavBar/></div>\n      <div className=\"column\">\n      <Header/></div></div>\n      <TimerContainer/>\n      <HomeContainer/>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps=(dispatch)=>{\n  return{\n    fetchInsulins:()=>dispatch(fetchInsulins()),\n    // getActiveEntries:(entry)=>dispatch(getActiveEntries(entry))\n  }\n}\n\n\nexport default connect(null,mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}