{"ast":null,"code":"import _classCallCheck from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/src/Components/LogContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchInsulins as _fetchInsulins, selectInsulin as _selectInsulin } from '../Redux/actions';\nimport InsulinLog from './InsulinLog';\n\nvar LogContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LogContainer, _Component);\n\n  function LogContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LogContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LogContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.generateTabs = function (insulins) {\n      return insulins.map(function (insulinObj) {\n        if (_this.state.selectedInsulin === insulinObj.id) {\n          return React.createElement(\"div\", {\n            className: \"active item\",\n            onClick: function onClick() {\n              return _selectInsulin(insulinObj);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 18\n            },\n            __self: this\n          }, insulinObj.insulin_name);\n        } else {\n          return React.createElement(\"div\", {\n            className: \"item\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 23\n            },\n            __self: this\n          }, insulinObj.insulin_name);\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(LogContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchInsulins();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: \"log\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ui top attached tabular menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, this.generateTabs(this.props.insulins)), React.createElement(InsulinLog, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return LogContainer;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    insulins: state.insulins\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchInsulins: function fetchInsulins() {\n      return dispatch(_fetchInsulins());\n    },\n    selectInsulin: function selectInsulin() {\n      return dispatch(_selectInsulin());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LogContainer);","map":{"version":3,"sources":["/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/src/Components/LogContainer.js"],"names":["React","Component","connect","fetchInsulins","selectInsulin","InsulinLog","LogContainer","generateTabs","insulins","map","insulinObj","state","selectedInsulin","id","insulin_name","props","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,aAAa,IAAbA,cAAR,EAAuBC,aAAa,IAAbA,cAAvB,QAA2C,kBAA3C;AACA,OAAOC,UAAP,MAAuB,cAAvB;;IAGMC,Y;;;;;;;;;;;;;;;;;;UAOJC,Y,GAAa,UAACC,QAAD,EAAY;AACvB,aAAOA,QAAQ,CAACC,GAAT,CAAa,UAAAC,UAAU,EAAE;AAC9B,YAAI,MAAKC,KAAL,CAAWC,eAAX,KAA+BF,UAAU,CAACG,EAA9C,EAAiD;AAC/C,iBAAO;AAAK,YAAA,SAAS,EAAC,aAAf;AACP,YAAA,OAAO,EAAE;AAAA,qBAAKT,cAAa,CAACM,UAAD,CAAlB;AAAA,aADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAENA,UAAU,CAACI,YAFL,CAAP;AAID,SALD,MAKK;AACH,iBAAO;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAuBJ,UAAU,CAACI,YAAlC,CAAP;AACD;AAEF,OAVM,CAAP;AAWD,K;;;;;;;wCAjBkB;AACjB,WAAKC,KAAL,CAAWZ,aAAX;AAED;;;6BAiBO;AAEN,aACE;AAAK,QAAA,EAAE,EAAC,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEA;AAAK,QAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKI,YAAL,CAAkB,KAAKQ,KAAL,CAAWP,QAA7B,CADH,CAFA,EAMA,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANA,CADF;AAYD;;;;EApCwBP,S;;AAuC3B,IAAMe,eAAe,GAAE,SAAjBA,eAAiB,CAACL,KAAD,EAAS;AAC9B,SAAO;AAACH,IAAAA,QAAQ,EAAEG,KAAK,CAACH;AAAjB,GAAP;AACD,CAFD;;AAIA,IAAMS,kBAAkB,GAAC,SAAnBA,kBAAmB,CAACC,QAAD,EAAY;AACnC,SAAM;AACJf,IAAAA,aAAa,EAAC;AAAA,aAAIe,QAAQ,CAACf,cAAa,EAAd,CAAZ;AAAA,KADV;AAEJC,IAAAA,aAAa,EAAC;AAAA,aAAIc,QAAQ,CAACd,cAAa,EAAd,CAAZ;AAAA;AAFV,GAAN;AAID,CALD;;AAQA,eAAeF,OAAO,CAACc,eAAD,EAAiBC,kBAAjB,CAAP,CAA4CX,YAA5C,CAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport {connect} from 'react-redux'\nimport {fetchInsulins, selectInsulin} from '../Redux/actions'\nimport InsulinLog from './InsulinLog'\n\n\nclass LogContainer extends Component{\n\n  componentDidMount(){\n    this.props.fetchInsulins()\n\n  }\n\n  generateTabs=(insulins)=>{\n    return insulins.map(insulinObj=>{\n      if (this.state.selectedInsulin === insulinObj.id){\n        return <div className=\"active item\"\n        onClick={()=> selectInsulin(insulinObj)}>\n        {insulinObj.insulin_name}\n        </div>\n      }else{\n        return <div className=\"item\">{insulinObj.insulin_name}</div>\n      }\n\n    })\n  }\n\n\n  render(){\n\n    return(\n      <div id='log'>\n\n      <div className=\"ui top attached tabular menu\">\n        {this.generateTabs(this.props.insulins)}\n\n      </div>\n      <InsulinLog/>\n\n\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps= (state)=>{\n  return {insulins: state.insulins}\n}\n\nconst mapDispatchToProps=(dispatch)=>{\n  return{\n    fetchInsulins:()=>dispatch(fetchInsulins()),\n    selectInsulin:()=>dispatch(selectInsulin())\n  }\n}\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(LogContainer)\n"]},"metadata":{},"sourceType":"module"}