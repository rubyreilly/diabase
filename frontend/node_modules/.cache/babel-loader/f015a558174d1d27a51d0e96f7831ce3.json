{"ast":null,"code":"import _toConsumableArray from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar initialState = {\n  users: [],\n  auth: {\n    currentUser: {\n      id: '',\n      username: ''\n    }\n  },\n  insulins: [],\n  selectedInsulin: ''\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"GET_USERS\":\n      {\n        return _objectSpread({}, state, {\n          users: action.payload\n        });\n      }\n\n    case \"SET_USER\":\n      {\n        var currentUser = {\n          currentUser: action.payload\n        };\n        console.log(\"CURRENT USER id?:\", action.payload.id);\n        return _objectSpread({}, state, {\n          auth: currentUser\n        });\n      }\n\n    case \"ADD_USER\":\n      {\n        var newUsers = _toConsumableArray(state.users).concat([action.payload]);\n\n        return _objectSpread({}, state, {\n          users: newUsers\n        });\n      }\n\n    case \"GET_INSULINS\":\n      {\n        console.log(\"SHOULD BE INS\", action.payload);\n        return _objectSpread({}, state, {\n          insulins: action.payload\n        });\n      }\n\n    case \"SELECT_INSULIN\":\n      {\n        return _objectSpread({}, state, {\n          selectedInsulin: action.payload\n        });\n      }\n\n    case \"REMOVE_INSULIN\":\n      {\n        var newInsulins = _toConsumableArray(state.insulins).filter(function (insulin) {\n          return insulin !== action.payload;\n        });\n\n        return _objectSpread({}, state, {\n          insulins: newInsulins\n        });\n      }\n\n    case \"ADD_INSULIN\":\n      {\n        var _newInsulins = _toConsumableArray(state.insulins).concat([action.payload]);\n\n        return _objectSpread({}, state, {\n          insulins: _newInsulins\n        });\n      }\n\n    case \"REMOVE_ENTRY\":\n      {\n        var _newInsulins2 = _toConsumableArray(state.insulins).map(function (insulin) {\n          if (insulin.id === action.payload.insulin_id) {\n            var newEntries = _toConsumableArray(insulin.all_associated_entries).filter(function (entry) {\n              return entry !== action.payload;\n            });\n\n            return _objectSpread({}, insulin, {\n              all_associated_entries: newEntries\n            });\n          } else {\n            return _objectSpread({}, insulin);\n          }\n        });\n\n        return _objectSpread({}, state, {\n          insulins: _newInsulins2\n        });\n      }\n\n    case \"ADD_ENTRY\":\n      {\n        var _newInsulins3 = _toConsumableArray(state.insulins).map(function (insulin) {\n          if (insulin.id === action.payload.insulin_id) {\n            var newEntries = [action.payload].concat(_toConsumableArray(insulin.all_associated_entries));\n            return _objectSpread({}, insulin, {\n              all_associated_entries: newEntries\n            });\n          } else {\n            return _objectSpread({}, insulin);\n          }\n        });\n\n        return _objectSpread({}, state, {\n          insulins: _newInsulins3\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport { reducer };","map":{"version":3,"sources":["/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/src/Redux/reducer.js"],"names":["initialState","users","auth","currentUser","id","username","insulins","selectedInsulin","reducer","state","action","type","payload","console","log","newUsers","newInsulins","filter","insulin","map","insulin_id","newEntries","all_associated_entries","entry"],"mappings":"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","sourcesContent":["const initialState = {\n  users:[],\n  auth: { currentUser: {id:'',username:''} },\n  insulins:[],\n  selectedInsulin: ''\n}\n\nconst reducer = (state = initialState, action) =>{\n  switch (action.type){\n\n\n\n    case(\"GET_USERS\"):{\n      return {...state, users:action.payload}\n    }\n    case(\"SET_USER\"):{\n      const currentUser = { currentUser: action.payload }\n      console.log(\"CURRENT USER id?:\", action.payload.id)\n      return {...state, auth:currentUser}\n\n    }\n    case(\"ADD_USER\"):{\n      const newUsers = [...state.users, action.payload]\n      return {...state, users: newUsers}\n    }\n\n\n\n    case(\"GET_INSULINS\"):{\n      console.log(\"SHOULD BE INS\", action.payload)\n      return {...state, insulins:action.payload}\n    }\n    case(\"SELECT_INSULIN\"):{\n      return {...state, selectedInsulin: action.payload}\n    }\n    case(\"REMOVE_INSULIN\"):{\n      const newInsulins = [...state.insulins].filter((insulin)=>{\n        return insulin !== action.payload\n          })\n      return {...state, insulins: newInsulins}\n    }\n    case(\"ADD_INSULIN\"):{\n      const newInsulins = [...state.insulins, action.payload]\n      return {...state, insulins: newInsulins}\n    }\n\n\n\n\n    case(\"REMOVE_ENTRY\"):{\n      const newInsulins = [...state.insulins].map((insulin)=>{\n        if (insulin.id === action.payload.insulin_id){\n          const newEntries = [...insulin.all_associated_entries].filter((entry)=>{\n            return entry !== action.payload\n          })\n          return {...insulin, all_associated_entries: newEntries}\n        }else{\n          return {...insulin}\n        }\n      }\n    )\n      return {...state, insulins: newInsulins}\n    }\n    case(\"ADD_ENTRY\"):{\n      const newInsulins = [...state.insulins].map((insulin)=>{\n        if (insulin.id === action.payload.insulin_id){\n          const newEntries = [action.payload,...insulin.all_associated_entries]\n          return {...insulin,all_associated_entries: newEntries}\n        }else{\n          return {...insulin}\n        }\n      }\n    )\n      return {...state, insulins: newInsulins}\n    }\n\n\n\n    default:\n      return state\n  }\n}\n\nexport {reducer}\n"]},"metadata":{},"sourceType":"module"}