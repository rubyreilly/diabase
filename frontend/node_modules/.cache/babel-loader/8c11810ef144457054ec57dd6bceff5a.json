{"ast":null,"code":"import _classCallCheck from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/src/Components/LogContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchInsulins as _fetchInsulins } from '../Redux/actions';\nimport InsulinLog from './InsulinLog';\n\nvar LogContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LogContainer, _Component);\n\n  function LogContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LogContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LogContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      active_tab: 4\n    };\n\n    _this.generateTabs = function (insulins) {\n      return insulins.map(function (insulinObj) {\n        if (_this.state.active_tab === insulinObj.id) {\n          return React.createElement(\"div\", {\n            className: \"active item\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 21\n            },\n            __self: this\n          }, insulinObj.insulin_name);\n        } else {\n          return React.createElement(\"div\", {\n            className: \"item\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 23\n            },\n            __self: this\n          }, insulinObj.insulin_name);\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(LogContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchInsulins();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: \"log\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ui top attached tabular menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, this.generateTabs(this.props.insulins)), React.createElement(InsulinLog, {\n        insulinObj: this.state.active_tab,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return LogContainer;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    insulins: state.insulins\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchInsulins: function fetchInsulins() {\n      return dispatch(_fetchInsulins());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LogContainer);","map":{"version":3,"sources":["/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/src/Components/LogContainer.js"],"names":["React","Component","connect","fetchInsulins","InsulinLog","LogContainer","state","active_tab","generateTabs","insulins","map","insulinObj","id","insulin_name","props","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,aAAa,IAAbA,cAAR,QAA4B,kBAA5B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;IAGMC,Y;;;;;;;;;;;;;;;;;UAEJC,K,GAAM;AACJC,MAAAA,UAAU,EAAE;AADR,K;;UAQNC,Y,GAAa,UAACC,QAAD,EAAY;AACvB,aAAOA,QAAQ,CAACC,GAAT,CAAa,UAAAC,UAAU,EAAE;AAC9B,YAAI,MAAKL,KAAL,CAAWC,UAAX,KAA0BI,UAAU,CAACC,EAAzC,EAA4C;AAC1C,iBAAO;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA8BD,UAAU,CAACE,YAAzC,CAAP;AACD,SAFD,MAEK;AACH,iBAAO;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAuBF,UAAU,CAACE,YAAlC,CAAP;AACD;AAEF,OAPM,CAAP;AAQD,K;;;;;;;wCAbkB;AACjB,WAAKC,KAAL,CAAWX,aAAX;AACD;;;6BAcO;AAEN,aACE;AAAK,QAAA,EAAE,EAAC,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEA;AAAK,QAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKK,YAAL,CAAkB,KAAKM,KAAL,CAAWL,QAA7B,CADH,CAFA,EAMA,oBAAC,UAAD;AAAY,QAAA,UAAU,EAAE,KAAKH,KAAL,CAAWC,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANA,CADF;AAYD;;;;EApCwBN,S;;AAuC3B,IAAMc,eAAe,GAAE,SAAjBA,eAAiB,CAACT,KAAD,EAAS;AAC9B,SAAO;AAACG,IAAAA,QAAQ,EAAEH,KAAK,CAACG;AAAjB,GAAP;AACD,CAFD;;AAIA,IAAMO,kBAAkB,GAAC,SAAnBA,kBAAmB,CAACC,QAAD,EAAY;AACnC,SAAM;AACJd,IAAAA,aAAa,EAAC;AAAA,aAAIc,QAAQ,CAACd,cAAa,EAAd,CAAZ;AAAA;AADV,GAAN;AAGD,CAJD;;AAOA,eAAeD,OAAO,CAACa,eAAD,EAAiBC,kBAAjB,CAAP,CAA4CX,YAA5C,CAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport {connect} from 'react-redux'\nimport {fetchInsulins} from '../Redux/actions'\nimport InsulinLog from './InsulinLog'\n\n\nclass LogContainer extends Component{\n\n  state={\n    active_tab: 4\n  }\n\n  componentDidMount(){\n    this.props.fetchInsulins()\n  }\n\n  generateTabs=(insulins)=>{\n    return insulins.map(insulinObj=>{\n      if (this.state.active_tab === insulinObj.id){\n        return <div className=\"active item\">{insulinObj.insulin_name}</div>\n      }else{\n        return <div className=\"item\">{insulinObj.insulin_name}</div>\n      }\n\n    })\n  }\n\n\n  render(){\n\n    return(\n      <div id='log'>\n\n      <div className=\"ui top attached tabular menu\">\n        {this.generateTabs(this.props.insulins)}\n\n      </div>\n      <InsulinLog insulinObj={this.state.active_tab}/>\n\n\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps= (state)=>{\n  return {insulins: state.insulins}\n}\n\nconst mapDispatchToProps=(dispatch)=>{\n  return{\n    fetchInsulins:()=>dispatch(fetchInsulins())\n  }\n}\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(LogContainer)\n"]},"metadata":{},"sourceType":"module"}