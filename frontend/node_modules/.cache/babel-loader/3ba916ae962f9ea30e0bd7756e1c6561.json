{"ast":null,"code":"import _classCallCheck from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/src/Components/TimerCard.js\";\nimport React, { Component } from 'react';\nimport moment from 'moment';\nimport { momentDurationFormatSetup } from 'moment-duration-format';\nimport Countdown from 'react-countdown-now';\n\nvar TimerCard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TimerCard, _Component);\n\n  function TimerCard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TimerCard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TimerCard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.calculateTimeLeft = function () {\n      var start = new Date(_this.props.entryObj.entry_date_and_time);\n      var duration_min = _this.props.insulinObj.insulin_duration_in_minutes;\n      var duration_sec = duration_min * 60;\n      var duration = duration_sec * 1000;\n      return React.createElement(Countdown, {\n        date: start + duration,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(TimerCard, [{\n    key: \"render\",\n    value: function render() {\n      var entryObj = this.props.entryObj;\n      var insulinObj = this.props.insulinObj;\n      var formattedDate = moment(entryObj.entry_date_and_time).format('dddd MMMM Do');\n      var formattedStartTime = moment(entryObj.entry_date_and_time).format('LT');\n      var formattedDuration = moment.duration(insulinObj.insulin_duration_in_minutes, \"minutes\").format(\"h:mm\");\n      return React.createElement(\"div\", {\n        className: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, this.calculateTimeLeft(), React.createElement(\"div\", {\n        className: \"ui center aligned green inverted segment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, insulinObj.insulin_name, \" timer\"), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \" \", entryObj.time_left, \" of \", formattedDuration, \" remaining\"), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Administered: \", formattedDate, \" at \", formattedStartTime)));\n    }\n  }]);\n\n  return TimerCard;\n}(Component);\n\nexport default TimerCard;","map":{"version":3,"sources":["/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/src/Components/TimerCard.js"],"names":["React","Component","moment","momentDurationFormatSetup","Countdown","TimerCard","calculateTimeLeft","start","Date","props","entryObj","entry_date_and_time","duration_min","insulinObj","insulin_duration_in_minutes","duration_sec","duration","formattedDate","format","formattedStartTime","formattedDuration","insulin_name","time_left"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAAQC,yBAAR,QAAwC,wBAAxC;AACA,OAAOC,SAAP,MAAsB,qBAAtB;;IAEMC,S;;;;;;;;;;;;;;;;;;UAOJC,iB,GAAkB,YAAI;AACpB,UAAMC,KAAK,GAAG,IAAIC,IAAJ,CAAS,MAAKC,KAAL,CAAWC,QAAX,CAAoBC,mBAA7B,CAAd;AAEA,UAAMC,YAAY,GAAG,MAAKH,KAAL,CAAWI,UAAX,CAAsBC,2BAA3C;AACA,UAAMC,YAAY,GAAGH,YAAY,GAAG,EAApC;AACA,UAAMI,QAAQ,GAAGD,YAAY,GAAG,IAAhC;AAEA,aAAO,oBAAC,SAAD;AAAW,QAAA,IAAI,EAAER,KAAK,GAAGS,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,K;;;;;;;6BAGO;AAGN,UAAMN,QAAQ,GAAG,KAAKD,KAAL,CAAWC,QAA5B;AACA,UAAMG,UAAU,GAAG,KAAKJ,KAAL,CAAWI,UAA9B;AAEA,UAAMI,aAAa,GAAGf,MAAM,CAACQ,QAAQ,CAACC,mBAAV,CAAN,CAAqCO,MAArC,CAA4C,cAA5C,CAAtB;AACA,UAAMC,kBAAkB,GAAGjB,MAAM,CAACQ,QAAQ,CAACC,mBAAV,CAAN,CAAqCO,MAArC,CAA4C,IAA5C,CAA3B;AACA,UAAME,iBAAiB,GAAElB,MAAM,CAACc,QAAP,CAAgBH,UAAU,CAACC,2BAA3B,EAAwD,SAAxD,EAAmEI,MAAnE,CAA0E,MAA1E,CAAzB;AACA,aACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC,KAAKZ,iBAAL,EADD,EAEA;AAAK,QAAA,SAAS,EAAC,0CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKO,UAAU,CAACQ,YAAhB,WAFA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAMX,QAAQ,CAACY,SAAf,UAA8BF,iBAA9B,eAHA,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAmBH,aAAnB,UAAsCE,kBAAtC,CAJA,CAFA,CADF;AAaD;;;;EAxCqBlB,S;;AA2CxB,eAAeI,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport moment from 'moment'\nimport {momentDurationFormatSetup} from 'moment-duration-format'\nimport Countdown from 'react-countdown-now';\n\nclass TimerCard extends Component{\n\n  // calculateEndTime=(start)=>{\n  //   const duration = this.props.insulinObj.insulin_duration_in_minutes\n  //   return moment(start).add(duration, 'minutes').format()\n  // }\n\n  calculateTimeLeft=()=>{\n    const start = new Date(this.props.entryObj.entry_date_and_time)\n\n    const duration_min = this.props.insulinObj.insulin_duration_in_minutes\n    const duration_sec = duration_min * 60\n    const duration = duration_sec * 1000\n\n    return(<Countdown date={start + duration} />)\n  }\n\n\n  render(){\n\n\n    const entryObj = this.props.entryObj\n    const insulinObj = this.props.insulinObj\n\n    const formattedDate = moment(entryObj.entry_date_and_time).format('dddd MMMM Do')\n    const formattedStartTime = moment(entryObj.entry_date_and_time).format('LT')\n    const formattedDuration= moment.duration(insulinObj.insulin_duration_in_minutes, \"minutes\").format(\"h:mm\")\n    return(\n      <div className=\"column\">\n      {this.calculateTimeLeft()}\n      <div className=\"ui center aligned green inverted segment\">\n\n      <h3>{insulinObj.insulin_name} timer</h3>\n      <h1> {entryObj.time_left} of {formattedDuration} remaining</h1>\n      <h3>Administered: {formattedDate} at {formattedStartTime}</h3>\n\n      </div>\n      </div>\n\n    )\n  }\n}\n\nexport default TimerCard\n"]},"metadata":{},"sourceType":"module"}