{"ast":null,"code":"import _defineProperty from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/src/Components/NewEntryForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { postEntry as _postEntry } from '../Redux/actions';\nimport moment from 'moment';\n\nvar NewEntryForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewEntryForm, _Component);\n\n  function NewEntryForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NewEntryForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NewEntryForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      // time:new Date(),\n      time: '',\n      // month:moment().month(),\n      month: '',\n      day: '',\n      insulin: \"\",\n      note: '',\n      bloodSugar: '',\n      numUnits: ''\n    };\n\n    _this.handleChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value), function () {\n        return console.log(_this.state);\n      });\n    };\n\n    _this.formatDateTime = function () {\n      console.log(\"TIME\", _this.state.time);\n      console.log(\"MONTH\", _this.state.month);\n      console.log(\"DAY\", _this.state.day); // const time_to_combine = this.state.time\n\n      var datetime_combined = new Date(\"\".concat(_this.state.day, \" \").concat(_this.state.month, \" \").concat(_this.state.time, \" UTC\"));\n      console.log(\"COMBINED\", datetime_combined);\n      var d = datetime_combined.toISOString();\n      console.log(\"d\", d);\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      var insulinObj = _this.props.insulins.find(function (insulin) {\n        return insulin.insulin_name == _this.state.insulin;\n      }); // console.log(\"SHOULD BE USER ID\", this.props.user.id)\n\n\n      var newEntry = {\n        user_id: _this.props.user.id,\n        entry_date_and_time: _this.formatDateTime(),\n        // entry_date_and_time: this.state.time.toISOString(),\n        insulin_id: insulinObj.id,\n        status: 'active',\n        note: _this.state.note,\n        current_blood_sugar: _this.state.bloodSugar,\n        num_units_insulin: _this.state.numUnits\n      };\n\n      _this.props.postEntry(newEntry);\n\n      _this.setState({\n        insulin: '',\n        note: '',\n        bloodSugar: '',\n        numUnits: ''\n      });\n    };\n\n    _this.generateInsulinDropDown = function () {\n      return _this.props.insulins.map(function (insulin) {\n        return React.createElement(\"option\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, insulin.insulin_name);\n      });\n    };\n\n    _this.generateMonthDropDown = function (monthArray, nowMonth) {\n      return monthArray.map(function (month) {\n        if (month === nowMonth) {\n          return React.createElement(\"option\", {\n            selected: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }, \" \", month);\n        } else {\n          return React.createElement(\"option\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          }, month);\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(NewEntryForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var monthArray = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]; // const now = new Date()\n\n      var nowMonth = monthArray[new Date().getMonth()];\n      var nowDay = new Date().getDate();\n      var nowTime = moment().format('LT'); // console.log(monthArray[new Date().getMonth()])\n\n      console.log(nowMonth);\n      console.log(nowDay);\n      console.log(nowTime);\n      return React.createElement(\"form\", {\n        className: \"ui small form segment\",\n        id: \"newform\",\n        onSubmit: function onSubmit(e) {\n          return _this2.handleSubmit(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"fields\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        name: \"insulin\",\n        value: this.state.insulin,\n        onChange: function onChange(e) {\n          return _this2.handleChange(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        selected: true,\n        disabled: true,\n        hidden: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"select insulin\"), this.generateInsulinDropDown())), React.createElement(\"div\", {\n        className: \"two wide field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Time\"), React.createElement(\"input\", {\n        name: \"time\",\n        value: nowTime,\n        onChange: function onChange(e) {\n          return _this2.handleChange(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        name: \"month\",\n        value: this.state.month,\n        onChange: function onChange(e) {\n          return _this2.handleChange(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, this.generateMonthDropDown(monthArray, nowMonth))), React.createElement(\"div\", {\n        className: \"two wide field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Day\"), React.createElement(\"input\", {\n        name: \"day\",\n        value: this.state.day,\n        placeholder: nowDay,\n        onChange: function onChange(e) {\n          return _this2.handleChange(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"two wide field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"Blood Sugar\"), React.createElement(\"input\", {\n        name: \"bloodSugar\",\n        value: this.state.bloodSugar,\n        onChange: function onChange(e) {\n          return _this2.handleChange(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"two wide field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"# Units\"), React.createElement(\"input\", {\n        name: \"numUnits\",\n        value: this.state.numUnits,\n        onChange: function onChange(e) {\n          return _this2.handleChange(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"Note\"), React.createElement(\"textarea\", {\n        rows: \"2\",\n        name: \"note\",\n        value: this.state.note,\n        onChange: function onChange(e) {\n          return _this2.handleChange(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        id: \"add-new-entry-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"add to log\"))));\n    }\n  }]);\n\n  return NewEntryForm;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    insulins: state.insulins,\n    user: state.auth.currentUser\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    postEntry: function postEntry(newEntry) {\n      return dispatch(_postEntry(newEntry));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewEntryForm);","map":{"version":3,"sources":["/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/src/Components/NewEntryForm.js"],"names":["React","Component","connect","postEntry","moment","NewEntryForm","state","time","month","day","insulin","note","bloodSugar","numUnits","handleChange","e","setState","target","name","value","console","log","formatDateTime","datetime_combined","Date","d","toISOString","handleSubmit","preventDefault","insulinObj","props","insulins","find","insulin_name","newEntry","user_id","user","id","entry_date_and_time","insulin_id","status","current_blood_sugar","num_units_insulin","generateInsulinDropDown","map","generateMonthDropDown","monthArray","nowMonth","getMonth","nowDay","getDate","nowTime","format","mapStateToProps","auth","currentUser","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {connect} from 'react-redux'\nimport {postEntry} from '../Redux/actions'\nimport moment from 'moment'\n\nclass NewEntryForm extends Component{\n\n  state = {\n\n    // time:new Date(),\n    time:'',\n    // month:moment().month(),\n    month:'',\n    day:'',\n\n\n    insulin:\"\",\n    note:'',\n    bloodSugar:'',\n    numUnits:''\n  }\n\n  handleChange=(e)=>{\n    this.setState({\n      [e.target.name]: e.target.value\n    }, ()=>console.log(this.state))\n  }\n\n  formatDateTime=()=>{\n    console.log(\"TIME\",this.state.time)\n    console.log(\"MONTH\",this.state.month)\n    console.log(\"DAY\",this.state.day)\n\n    // const time_to_combine = this.state.time\n\n    const datetime_combined = new Date(`${this.state.day} ${this.state.month} ${this.state.time} UTC`)\n    console.log(\"COMBINED\", datetime_combined)\n\n    const d= datetime_combined.toISOString()\n    console.log(\"d\", d)\n\n  }\n\n  handleSubmit=(e)=>{\n    e.preventDefault()\n    const insulinObj=this.props.insulins.find((insulin)=>{\n      return insulin.insulin_name == this.state.insulin\n    })\n\n    // console.log(\"SHOULD BE USER ID\", this.props.user.id)\n    const newEntry = {\n      user_id: this.props.user.id,\n      entry_date_and_time: this.formatDateTime(),\n      // entry_date_and_time: this.state.time.toISOString(),\n      insulin_id : insulinObj.id,\n      status: 'active',\n      note: this.state.note,\n      current_blood_sugar: this.state.bloodSugar,\n      num_units_insulin: this.state.numUnits}\n    this.props.postEntry(newEntry)\n    this.setState({\n      insulin: '',\n      note:'',\n      bloodSugar:'',\n      numUnits:''\n    })\n  }\n\n  generateInsulinDropDown=()=>{\n    return this.props.insulins.map(insulin=><option>{insulin.insulin_name}</option>)\n  }\n\n  generateMonthDropDown=(monthArray, nowMonth)=>{\n    return monthArray.map(month=>{\n      if (month === nowMonth){\n        return <option selected> {month}</option>\n      }\n      else{\n        return <option>{month}</option>\n      }\n    })\n  }\n\n\n  render(){\n    const monthArray= [\"January\", \"February\", \"March\", \"April\", \"May\",\n    \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n    // const now = new Date()\n    const nowMonth = monthArray[new Date().getMonth()]\n    const nowDay = new Date().getDate()\n    const nowTime = moment().format('LT')\n    // console.log(monthArray[new Date().getMonth()])\n    console.log(nowMonth)\n    console.log(nowDay)\n    console.log(nowTime)\n\n    return(\n\n      <form className='ui small form segment' id='newform' onSubmit={(e)=>this.handleSubmit(e)}>\n\n      <div className='fields'>\n\n\n      <div className='field'>\n\n      <select name='insulin' value={this.state.insulin} onChange={(e)=>this.handleChange(e)}>\n      <option value=\"\" selected disabled hidden>select insulin</option>\n      {this.generateInsulinDropDown()}\n      </select>\n\n      </div>\n\n\n\n\n\n      <div className=\"two wide field\">\n        <label>Time</label>\n        <input name='time' value={nowTime}  onChange={(e)=>this.handleChange(e)}></input>\n        </div>\n\n\n        <div className=\"field\">\n        <select name='month' value={this.state.month} onChange={(e)=>this.handleChange(e)}>\n        {this.generateMonthDropDown(monthArray, nowMonth)}\n        </select>\n        </div>\n\n          <div className=\"two wide field\">\n            <label>Day</label>\n            <input name='day' value={this.state.day} placeholder={nowDay} onChange={(e)=>this.handleChange(e)}></input>\n            </div>\n\n\n\n\n\n\n\n      <div className=\"two wide field\">\n        <label>Blood Sugar</label>\n        <input name='bloodSugar' value={this.state.bloodSugar} onChange={(e)=>this.handleChange(e)}></input>\n        </div>\n\n\n\n      <div className=\"two wide field\">\n        <label># Units</label>\n        <input name='numUnits' value={this.state.numUnits} onChange={(e)=>this.handleChange(e)}></input>\n        </div>\n\n\n\n\n      <div className=\"field\">\n        <label>Note</label>\n        <textarea rows=\"2\" name='note' value={this.state.note} onChange={(e)=>this.handleChange(e)}></textarea>\n        </div>\n\n        <div className=\"field\">\n        <button id='add-new-entry-btn'>add to log</button>\n        </div>\n      </div>\n\n\n\n      </form>\n\n    )\n  }\n}\n\n\n\nconst mapStateToProps=(state)=>{\n  return{\n    insulins: state.insulins,\n    user:state.auth.currentUser\n}\n}\n\nconst mapDispatchToProps=(dispatch)=>{\n  return{\n    postEntry:(newEntry)=>dispatch(postEntry(newEntry)),\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewEntryForm)\n"]},"metadata":{},"sourceType":"module"}