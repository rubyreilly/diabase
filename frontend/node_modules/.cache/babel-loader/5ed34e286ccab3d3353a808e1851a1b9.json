{"ast":null,"code":"import _classCallCheck from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/src/Components/LogContainer.js\";\nimport React, { Component } from 'react'; // import {reducer} from '../Redux/reducer'\n\nimport { connect } from 'react-redux';\nimport { selectInsulin as _selectInsulin } from '../Redux/actions';\nimport InsulinLog from './InsulinLog';\n\nvar LogContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LogContainer, _Component);\n\n  function LogContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LogContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LogContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.generateTabs = function (insulins) {\n      return insulins.map(function (insulinObj) {\n        return React.createElement(\"div\", {\n          className: _this.props.selectedInsulin === insulinObj.id ? \"active item\" : \"item\",\n          onClick: function onClick() {\n            return _this.props.selectInsulin(insulinObj.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, insulinObj.insulin_name);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(LogContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // this.props.fetchInsulins()\n      console.log(state.insulins);\n\n      if (this.props.selectedInsulin === \"\") {\n        return this.props.selectInsulin(this.props.insulins[0].id);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: \"log\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ui top attached tabular menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, this.generateTabs(this.props.insulins)), React.createElement(InsulinLog, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return LogContainer;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    insulins: state.insulins,\n    selectedInsulin: state.selectedInsulin\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    // fetchInsulins:()=>dispatch(fetchInsulins()),\n    selectInsulin: function selectInsulin(insulin) {\n      return dispatch(_selectInsulin(insulin));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LogContainer);","map":{"version":3,"sources":["/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/src/Components/LogContainer.js"],"names":["React","Component","connect","selectInsulin","InsulinLog","LogContainer","generateTabs","insulins","map","insulinObj","props","selectedInsulin","id","insulin_name","console","log","state","mapStateToProps","mapDispatchToProps","dispatch","insulin"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,aAAa,IAAbA,cAAR,QAA4B,kBAA5B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;IAGMC,Y;;;;;;;;;;;;;;;;;;UASJC,Y,GAAa,UAACC,QAAD,EAAY;AAEvB,aAAOA,QAAQ,CAACC,GAAT,CAAa,UAAAC,UAAU,EAAE;AAE9B,eAAO;AAAK,UAAA,SAAS,EAAE,MAAKC,KAAL,CAAWC,eAAX,KAA+BF,UAAU,CAACG,EAA1C,GAA+C,aAA/C,GAA6D,MAA7E;AACP,UAAA,OAAO,EAAE;AAAA,mBAAK,MAAKF,KAAL,CAAWP,aAAX,CAAyBM,UAAU,CAACG,EAApC,CAAL;AAAA,WADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAENH,UAAU,CAACI,YAFL,CAAP;AAID,OANM,CAAP;AAOD,K;;;;;;;wCAjBkB;AACjB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACT,QAAlB;;AACA,UAAI,KAAKG,KAAL,CAAWC,eAAX,KAA6B,EAAjC,EAAoC;AAClC,eAAO,KAAKD,KAAL,CAAWP,aAAX,CAAyB,KAAKO,KAAL,CAAWH,QAAX,CAAoB,CAApB,EAAuBK,EAAhD,CAAP;AACD;AACF;;;6BAcO;AACN,aACE;AAAK,QAAA,EAAE,EAAC,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKN,YAAL,CAAkB,KAAKI,KAAL,CAAWH,QAA7B,CADH,CADA,EAIA,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJA,CADF;AAQD;;;;EA9BwBN,S;;AAiC3B,IAAMgB,eAAe,GAAE,SAAjBA,eAAiB,CAACD,KAAD,EAAS;AAC9B,SAAO;AACLT,IAAAA,QAAQ,EAAES,KAAK,CAACT,QADX;AAELI,IAAAA,eAAe,EAAEK,KAAK,CAACL;AAFlB,GAAP;AAID,CALD;;AAOA,IAAMO,kBAAkB,GAAC,SAAnBA,kBAAmB,CAACC,QAAD,EAAY;AACnC,SAAM;AACJ;AACAhB,IAAAA,aAAa,EAAC,uBAACiB,OAAD;AAAA,aAAWD,QAAQ,CAAChB,cAAa,CAACiB,OAAD,CAAd,CAAnB;AAAA;AAFV,GAAN;AAID,CALD;;AAQA,eAAelB,OAAO,CAACe,eAAD,EAAiBC,kBAAjB,CAAP,CAA4Cb,YAA5C,CAAf","sourcesContent":["import React, { Component } from 'react';\n// import {reducer} from '../Redux/reducer'\nimport {connect} from 'react-redux'\nimport {selectInsulin} from '../Redux/actions'\nimport InsulinLog from './InsulinLog'\n\n\nclass LogContainer extends Component{\n  componentDidMount(){\n    // this.props.fetchInsulins()\n    console.log(state.insulins)\n    if (this.props.selectedInsulin===\"\"){\n      return this.props.selectInsulin(this.props.insulins[0].id)\n    }\n  }\n\n  generateTabs=(insulins)=>{\n\n    return insulins.map(insulinObj=>{\n\n      return <div className={this.props.selectedInsulin === insulinObj.id ? \"active item\":\"item\"}\n      onClick={()=> this.props.selectInsulin(insulinObj.id)}>\n      {insulinObj.insulin_name}\n      </div>\n    })\n  }\n\n\n  render(){\n    return(\n      <div id='log'>\n      <div className=\"ui top attached tabular menu\">\n        {this.generateTabs(this.props.insulins)}\n      </div>\n      <InsulinLog/>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps= (state)=>{\n  return {\n    insulins: state.insulins,\n    selectedInsulin: state.selectedInsulin\n  }\n}\n\nconst mapDispatchToProps=(dispatch)=>{\n  return{\n    // fetchInsulins:()=>dispatch(fetchInsulins()),\n    selectInsulin:(insulin)=>dispatch(selectInsulin(insulin))\n  }\n}\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(LogContainer)\n"]},"metadata":{},"sourceType":"module"}