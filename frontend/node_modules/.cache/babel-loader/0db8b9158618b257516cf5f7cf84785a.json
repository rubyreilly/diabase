{"ast":null,"code":"import _defineProperty from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/src/Components/NewEntryForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { postEntry as _postEntry } from '../Redux/actions';\nimport moment from 'moment';\n\nvar NewEntryForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewEntryForm, _Component);\n\n  function NewEntryForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NewEntryForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NewEntryForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      monthArray: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n      // time:new Date(),\n      time: moment().format('LT'),\n      // month:moment().month(),\n      month: new Date().getMonth(),\n      day: new Date().getDate(),\n      year: new Date().getFullYear(),\n      // time: new Date().getTime(),\n      insulin: \"\",\n      note: '',\n      bloodSugar: '',\n      numUnits: ''\n    };\n\n    _this.handleChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value), function () {\n        return console.log(_this.state);\n      });\n    };\n\n    _this.formatDateTime = function () {\n      console.log(\"TIME\", _this.state.time);\n      console.log(\"MONTH\", _this.state.month);\n      console.log(\"DAY\", _this.state.day);\n      var month_to_str = _this.state.monthArray[_this.state.month];\n      var datetime_combined = new Date(\"\".concat(month_to_str, \" \").concat(_this.state.day, \" \").concat(_this.state.year, \" \").concat(_this.state.time)); // console.log(\"COMBINED\", datetime_combined)\n\n      return datetime_combined.toISOString();\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      var insulinObj = _this.props.insulins.find(function (insulin) {\n        return insulin.insulin_name == _this.state.insulin;\n      }); // console.log(\"SHOULD BE USER ID\", this.props.user.id)\n\n\n      var newEntry = {\n        user_id: _this.props.user.id,\n        entry_date_and_time: _this.formatDateTime(),\n        // entry_date_and_time: this.state.time.toISOString(),\n        insulin_id: insulinObj.id,\n        status: 'active',\n        note: _this.state.note,\n        current_blood_sugar: _this.state.bloodSugar,\n        num_units_insulin: _this.state.numUnits\n      };\n\n      _this.props.postEntry(newEntry);\n\n      _this.setState({\n        insulin: '',\n        note: '',\n        bloodSugar: '',\n        numUnits: ''\n      });\n    };\n\n    _this.generateInsulinDropDown = function () {\n      return _this.props.insulins.map(function (insulin) {\n        return React.createElement(\"option\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, insulin.insulin_name);\n      });\n    };\n\n    _this.generateMonthDropDown = function () {\n      return _this.state.monthArray.map(function (month) {\n        // if (month === nowMonth){\n        //   return <option selected> {month}</option>\n        // }\n        // else{\n        return React.createElement(\"option\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, month); // }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(NewEntryForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var monthArray = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]; // const now = new Date()\n      // const nowMonth = monthArray[new Date().getMonth()]\n      // const nowDay = new Date().getDate()\n      // const nowTime = moment().format('LT')\n      // console.log(monthArray[new Date().getMonth()])\n      // console.log(nowMonth)\n      // console.log(nowDay)\n      // console.log(nowTime)\n\n      return React.createElement(\"form\", {\n        className: \"ui small form segment\",\n        id: \"newform\",\n        onSubmit: function onSubmit(e) {\n          return _this2.handleSubmit(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"fields\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        name: \"insulin\",\n        value: this.state.insulin,\n        onChange: function onChange(e) {\n          return _this2.handleChange(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        selected: true,\n        disabled: true,\n        hidden: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"select insulin\"), this.generateInsulinDropDown())), React.createElement(\"div\", {\n        className: \"two wide field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Time\"), React.createElement(\"input\", {\n        name: \"time\",\n        value: this.state.time,\n        onChange: function onChange(e) {\n          return _this2.handleChange(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        name: \"month\",\n        value: this.state.monthArray[this.state.month],\n        onChange: function onChange(e) {\n          return _this2.handleChange(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, this.generateMonthDropDown())), React.createElement(\"div\", {\n        className: \"two wide field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Day\"), React.createElement(\"input\", {\n        name: \"day\",\n        value: this.state.day,\n        onChange: function onChange(e) {\n          return _this2.handleChange(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"two wide field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Blood Sugar\"), React.createElement(\"input\", {\n        name: \"bloodSugar\",\n        value: this.state.bloodSugar,\n        onChange: function onChange(e) {\n          return _this2.handleChange(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"two wide field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"# Units\"), React.createElement(\"input\", {\n        name: \"numUnits\",\n        value: this.state.numUnits,\n        onChange: function onChange(e) {\n          return _this2.handleChange(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"Note\"), React.createElement(\"textarea\", {\n        rows: \"2\",\n        name: \"note\",\n        value: this.state.note,\n        onChange: function onChange(e) {\n          return _this2.handleChange(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        id: \"add-new-entry-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"add to log\"))));\n    }\n  }]);\n\n  return NewEntryForm;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    insulins: state.insulins,\n    user: state.auth.currentUser\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    postEntry: function postEntry(newEntry) {\n      return dispatch(_postEntry(newEntry));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewEntryForm);","map":{"version":3,"sources":["/Users/rubyreilly/dev/code/t1dlog/t1dlog_frontend/src/Components/NewEntryForm.js"],"names":["React","Component","connect","postEntry","moment","NewEntryForm","state","monthArray","time","format","month","Date","getMonth","day","getDate","year","getFullYear","insulin","note","bloodSugar","numUnits","handleChange","e","setState","target","name","value","console","log","formatDateTime","month_to_str","datetime_combined","toISOString","handleSubmit","preventDefault","insulinObj","props","insulins","find","insulin_name","newEntry","user_id","user","id","entry_date_and_time","insulin_id","status","current_blood_sugar","num_units_insulin","generateInsulinDropDown","map","generateMonthDropDown","mapStateToProps","auth","currentUser","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {connect} from 'react-redux'\nimport {postEntry} from '../Redux/actions'\nimport moment from 'moment'\n\nclass NewEntryForm extends Component{\n\n  state = {\n    monthArray: [\"January\", \"February\", \"March\", \"April\", \"May\",\n    \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n    // time:new Date(),\n    time: moment().format('LT'),\n    // month:moment().month(),\n    month: new Date().getMonth(),\n    day: new Date().getDate(),\n    year: new Date().getFullYear() ,\n    // time: new Date().getTime(),\n\n\n    insulin:\"\",\n    note:'',\n    bloodSugar:'',\n    numUnits:''\n  }\n\n  handleChange=(e)=>{\n    this.setState({\n      [e.target.name]: e.target.value\n    }, ()=>console.log(this.state))\n  }\n\n  formatDateTime=()=>{\n    console.log(\"TIME\",this.state.time)\n    console.log(\"MONTH\",this.state.month)\n    console.log(\"DAY\",this.state.day)\n\n    const month_to_str = this.state.monthArray[this.state.month]\n\n    const datetime_combined = new Date(`${month_to_str} ${this.state.day} ${this.state.year} ${this.state.time}`)\n    // console.log(\"COMBINED\", datetime_combined)\n\n    return datetime_combined.toISOString()\n\n  }\n\n  handleSubmit=(e)=>{\n    e.preventDefault()\n    const insulinObj=this.props.insulins.find((insulin)=>{\n      return insulin.insulin_name == this.state.insulin\n    })\n\n    // console.log(\"SHOULD BE USER ID\", this.props.user.id)\n    const newEntry = {\n      user_id: this.props.user.id,\n      entry_date_and_time: this.formatDateTime(),\n      // entry_date_and_time: this.state.time.toISOString(),\n      insulin_id : insulinObj.id,\n      status: 'active',\n      note: this.state.note,\n      current_blood_sugar: this.state.bloodSugar,\n      num_units_insulin: this.state.numUnits}\n    this.props.postEntry(newEntry)\n    this.setState({\n      insulin: '',\n      note:'',\n      bloodSugar:'',\n      numUnits:''\n    })\n  }\n\n  generateInsulinDropDown=()=>{\n    return this.props.insulins.map(insulin=><option>{insulin.insulin_name}</option>)\n  }\n\n  generateMonthDropDown=()=>{\n    return this.state.monthArray.map(month=>{\n      // if (month === nowMonth){\n      //   return <option selected> {month}</option>\n      // }\n      // else{\n        return <option>{month}</option>\n      // }\n    })\n  }\n\n\n  render(){\n    const monthArray= [\"January\", \"February\", \"March\", \"April\", \"May\",\n    \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n    // const now = new Date()\n    // const nowMonth = monthArray[new Date().getMonth()]\n    // const nowDay = new Date().getDate()\n    // const nowTime = moment().format('LT')\n    // console.log(monthArray[new Date().getMonth()])\n    // console.log(nowMonth)\n    // console.log(nowDay)\n    // console.log(nowTime)\n\n    return(\n\n      <form className='ui small form segment' id='newform' onSubmit={(e)=>this.handleSubmit(e)}>\n\n      <div className='fields'>\n\n\n      <div className='field'>\n\n      <select name='insulin' value={this.state.insulin} onChange={(e)=>this.handleChange(e)}>\n      <option value=\"\" selected disabled hidden>select insulin</option>\n      {this.generateInsulinDropDown()}\n      </select>\n\n      </div>\n\n\n\n\n\n      <div className=\"two wide field\">\n        <label>Time</label>\n        <input name='time' value={this.state.time} onChange={(e)=>this.handleChange(e)}></input>\n        </div>\n\n\n        <div className=\"field\">\n        <select name='month' value={this.state.monthArray[this.state.month]} onChange={(e)=>this.handleChange(e)}>\n        {this.generateMonthDropDown()}\n        </select>\n        </div>\n\n          <div className=\"two wide field\">\n            <label>Day</label>\n            <input name='day' value={this.state.day} onChange={(e)=>this.handleChange(e)}></input>\n            </div>\n\n\n\n\n\n\n\n      <div className=\"two wide field\">\n        <label>Blood Sugar</label>\n        <input name='bloodSugar' value={this.state.bloodSugar} onChange={(e)=>this.handleChange(e)}></input>\n        </div>\n\n\n\n      <div className=\"two wide field\">\n        <label># Units</label>\n        <input name='numUnits' value={this.state.numUnits} onChange={(e)=>this.handleChange(e)}></input>\n        </div>\n\n\n\n\n      <div className=\"field\">\n        <label>Note</label>\n        <textarea rows=\"2\" name='note' value={this.state.note} onChange={(e)=>this.handleChange(e)}></textarea>\n        </div>\n\n        <div className=\"field\">\n        <button id='add-new-entry-btn'>add to log</button>\n        </div>\n      </div>\n\n\n\n      </form>\n\n    )\n  }\n}\n\n\n\nconst mapStateToProps=(state)=>{\n  return{\n    insulins: state.insulins,\n    user:state.auth.currentUser\n}\n}\n\nconst mapDispatchToProps=(dispatch)=>{\n  return{\n    postEntry:(newEntry)=>dispatch(postEntry(newEntry)),\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewEntryForm)\n"]},"metadata":{},"sourceType":"module"}